
/*
 *    MCreator note: This file will be REGENERATED on each build.
 */
package net.mcreator.lsfurniture.init;

import net.minecraftforge.registries.RegistryObject;
import net.minecraftforge.registries.ForgeRegistries;
import net.minecraftforge.registries.DeferredRegister;

import net.minecraft.world.level.block.Block;

import net.mcreator.lsfurniture.block.WarpedWhiteStraightBlock;
import net.mcreator.lsfurniture.block.WarpedWhiteSofaBlock;
import net.mcreator.lsfurniture.block.WarpedWhiteRightEndBlock;
import net.mcreator.lsfurniture.block.WarpedWhiteLeftEndBlock;
import net.mcreator.lsfurniture.block.WarpedWhiteCornerBlock;
import net.mcreator.lsfurniture.block.WarpedWhiteChairBlock;
import net.mcreator.lsfurniture.block.WarpedWardrobeBlock;
import net.mcreator.lsfurniture.block.WarpedWardrobe2Block;
import net.mcreator.lsfurniture.block.WarpedWardrobe1Block;
import net.mcreator.lsfurniture.block.WarpedTableStraightBlock;
import net.mcreator.lsfurniture.block.WarpedTableNoneBlock;
import net.mcreator.lsfurniture.block.WarpedTableJunctionBlock;
import net.mcreator.lsfurniture.block.WarpedTableEndBlock;
import net.mcreator.lsfurniture.block.WarpedTableCrossBlock;
import net.mcreator.lsfurniture.block.WarpedTableCornerBlock;
import net.mcreator.lsfurniture.block.WarpedStoolBlock;
import net.mcreator.lsfurniture.block.WarpedSinkBlock;
import net.mcreator.lsfurniture.block.WarpedShelveBlock;
import net.mcreator.lsfurniture.block.WarpedPlankPath3Block;
import net.mcreator.lsfurniture.block.WarpedPlankPath2Block;
import net.mcreator.lsfurniture.block.WarpedPlankPath1Block;
import net.mcreator.lsfurniture.block.WarpedOvenBlock;
import net.mcreator.lsfurniture.block.WarpedMailBoxBlock;
import net.mcreator.lsfurniture.block.WarpedDrawerBlock;
import net.mcreator.lsfurniture.block.WarpedDeskBlock;
import net.mcreator.lsfurniture.block.WarpedCupboardVentOnBlock;
import net.mcreator.lsfurniture.block.WarpedCupboardVentBlock;
import net.mcreator.lsfurniture.block.WarpedCupboardCornerBlock;
import net.mcreator.lsfurniture.block.WarpedCupboardBlock;
import net.mcreator.lsfurniture.block.WarpedCounterCornerBlock;
import net.mcreator.lsfurniture.block.WarpedCounterBlock;
import net.mcreator.lsfurniture.block.WarpedChairBlock;
import net.mcreator.lsfurniture.block.ToasterBlock;
import net.mcreator.lsfurniture.block.TableStraightBlock;
import net.mcreator.lsfurniture.block.TableNoneBlock;
import net.mcreator.lsfurniture.block.TableJunctionBlock;
import net.mcreator.lsfurniture.block.TableEndBlock;
import net.mcreator.lsfurniture.block.TableCrossBlock;
import net.mcreator.lsfurniture.block.TableCornerBlock;
import net.mcreator.lsfurniture.block.TVWallOnBlock;
import net.mcreator.lsfurniture.block.TVWallOffBlock;
import net.mcreator.lsfurniture.block.TVWallMinecraftBlock;
import net.mcreator.lsfurniture.block.TVWallCodBlock;
import net.mcreator.lsfurniture.block.TVStandOnBlock;
import net.mcreator.lsfurniture.block.TVStandOffBlock;
import net.mcreator.lsfurniture.block.TVStandMinecraftBlock;
import net.mcreator.lsfurniture.block.TVStandCodBlock;
import net.mcreator.lsfurniture.block.StonePath92Block;
import net.mcreator.lsfurniture.block.StonePath91Block;
import net.mcreator.lsfurniture.block.StonePath8Block;
import net.mcreator.lsfurniture.block.StonePath75Block;
import net.mcreator.lsfurniture.block.StonePath74Block;
import net.mcreator.lsfurniture.block.StonePath73Block;
import net.mcreator.lsfurniture.block.StonePath72Block;
import net.mcreator.lsfurniture.block.StonePath71Block;
import net.mcreator.lsfurniture.block.StonePath6Block;
import net.mcreator.lsfurniture.block.StonePath5Block;
import net.mcreator.lsfurniture.block.StonePath4Block;
import net.mcreator.lsfurniture.block.StonePath3Block;
import net.mcreator.lsfurniture.block.StonePath2Block;
import net.mcreator.lsfurniture.block.StonePath1Block;
import net.mcreator.lsfurniture.block.StonePath133Block;
import net.mcreator.lsfurniture.block.StonePath132Block;
import net.mcreator.lsfurniture.block.StonePath131Block;
import net.mcreator.lsfurniture.block.StonePath12Block;
import net.mcreator.lsfurniture.block.StonePath11Block;
import net.mcreator.lsfurniture.block.StonePath10Block;
import net.mcreator.lsfurniture.block.SprucewardrobeBlock;
import net.mcreator.lsfurniture.block.SpruceWhiteStraightBlock;
import net.mcreator.lsfurniture.block.SpruceWhiteSofaBlock;
import net.mcreator.lsfurniture.block.SpruceWhiteRightEndBlock;
import net.mcreator.lsfurniture.block.SpruceWhiteLeftEndBlock;
import net.mcreator.lsfurniture.block.SpruceWhiteCornerBlock;
import net.mcreator.lsfurniture.block.SpruceWhiteChairBlock;
import net.mcreator.lsfurniture.block.SpruceWardrobe2Block;
import net.mcreator.lsfurniture.block.SpruceWardrobe1Block;
import net.mcreator.lsfurniture.block.SpruceTableStraightBlock;
import net.mcreator.lsfurniture.block.SpruceTableNoneBlock;
import net.mcreator.lsfurniture.block.SpruceTableJunctionBlock;
import net.mcreator.lsfurniture.block.SpruceTableEndBlock;
import net.mcreator.lsfurniture.block.SpruceTableCrossBlock;
import net.mcreator.lsfurniture.block.SpruceTableCornerBlock;
import net.mcreator.lsfurniture.block.SpruceStoolBlock;
import net.mcreator.lsfurniture.block.SpruceSinkBlock;
import net.mcreator.lsfurniture.block.SpruceShelveBlock;
import net.mcreator.lsfurniture.block.SprucePlankPath3Block;
import net.mcreator.lsfurniture.block.SprucePlankPath2Block;
import net.mcreator.lsfurniture.block.SprucePlankPath1Block;
import net.mcreator.lsfurniture.block.SpruceOvenBlock;
import net.mcreator.lsfurniture.block.SpruceMailBoxBlock;
import net.mcreator.lsfurniture.block.SpruceDrawerBlock;
import net.mcreator.lsfurniture.block.SpruceDeskBlock;
import net.mcreator.lsfurniture.block.SpruceCupboardVentOnBlock;
import net.mcreator.lsfurniture.block.SpruceCupboardVentBlock;
import net.mcreator.lsfurniture.block.SpruceCupboardCornerBlock;
import net.mcreator.lsfurniture.block.SpruceCupboardBlock;
import net.mcreator.lsfurniture.block.SpruceCounterCornerBlock;
import net.mcreator.lsfurniture.block.SpruceCounterBlock;
import net.mcreator.lsfurniture.block.SpruceChairBlock;
import net.mcreator.lsfurniture.block.SnowGolemTeddyBlock;
import net.mcreator.lsfurniture.block.SlimeTeddyBlock;
import net.mcreator.lsfurniture.block.RackBlock;
import net.mcreator.lsfurniture.block.PolarBearTeddyBlock;
import net.mcreator.lsfurniture.block.PlateBlock;
import net.mcreator.lsfurniture.block.OvenVentOnBlock;
import net.mcreator.lsfurniture.block.OvenVentBlock;
import net.mcreator.lsfurniture.block.OakYellowStraightBlock;
import net.mcreator.lsfurniture.block.OakYellowSofaBlock;
import net.mcreator.lsfurniture.block.OakYellowRightEndBlock;
import net.mcreator.lsfurniture.block.OakYellowOuterBlock;
import net.mcreator.lsfurniture.block.OakYellowLeftEndBlock;
import net.mcreator.lsfurniture.block.OakYellowCornerBlock;
import net.mcreator.lsfurniture.block.OakWhiteStraightBlock;
import net.mcreator.lsfurniture.block.OakWhiteSofaBlock;
import net.mcreator.lsfurniture.block.OakWhiteRightEndBlock;
import net.mcreator.lsfurniture.block.OakWhiteLeftEndBlock;
import net.mcreator.lsfurniture.block.OakWhiteCornerBlock;
import net.mcreator.lsfurniture.block.OakWhiteChairBlock;
import net.mcreator.lsfurniture.block.OakWaveyBlock;
import net.mcreator.lsfurniture.block.OakWardrobe2Block;
import net.mcreator.lsfurniture.block.OakWardrobe1Block;
import net.mcreator.lsfurniture.block.OakWardrobe0Block;
import net.mcreator.lsfurniture.block.OakVerticalStripesBlock;
import net.mcreator.lsfurniture.block.OakSwirlBlock;
import net.mcreator.lsfurniture.block.OakStoolBlock;
import net.mcreator.lsfurniture.block.OakSmallBricksBlock;
import net.mcreator.lsfurniture.block.OakSlashBlock;
import net.mcreator.lsfurniture.block.OakSinkBlock;
import net.mcreator.lsfurniture.block.OakShelveBlock;
import net.mcreator.lsfurniture.block.OakRedSofaBlock;
import net.mcreator.lsfurniture.block.OakPurpleSofaBlock;
import net.mcreator.lsfurniture.block.OakPlusBlock;
import net.mcreator.lsfurniture.block.OakPlankPath8Block;
import net.mcreator.lsfurniture.block.OakPlankPath3Block;
import net.mcreator.lsfurniture.block.OakPlankPath2Block;
import net.mcreator.lsfurniture.block.OakPlankPath1Block;
import net.mcreator.lsfurniture.block.OakPinkSofaBlock;
import net.mcreator.lsfurniture.block.OakOvenBlock;
import net.mcreator.lsfurniture.block.OakOrangeSofaBlock;
import net.mcreator.lsfurniture.block.OakMosaicBlock;
import net.mcreator.lsfurniture.block.OakMailBoxBlock;
import net.mcreator.lsfurniture.block.OakMagentaSofaBlock;
import net.mcreator.lsfurniture.block.OakLimeSofaBlock;
import net.mcreator.lsfurniture.block.OakLightGraySofaBlock;
import net.mcreator.lsfurniture.block.OakLightBlueSofaBlock;
import net.mcreator.lsfurniture.block.OakHorizontalStripesBlock;
import net.mcreator.lsfurniture.block.OakGreenSofaBlock;
import net.mcreator.lsfurniture.block.OakGraySofaBlock;
import net.mcreator.lsfurniture.block.OakDunesBlock;
import net.mcreator.lsfurniture.block.OakDrawerBlock;
import net.mcreator.lsfurniture.block.OakDiagonalBlock;
import net.mcreator.lsfurniture.block.OakDeskBlock;
import net.mcreator.lsfurniture.block.OakCyanSofaBlock;
import net.mcreator.lsfurniture.block.OakCupboardVentOnBlock;
import net.mcreator.lsfurniture.block.OakCupboardVentBlock;
import net.mcreator.lsfurniture.block.OakCupboardCornerBlock;
import net.mcreator.lsfurniture.block.OakCupboardBlock;
import net.mcreator.lsfurniture.block.OakCreateBlock;
import net.mcreator.lsfurniture.block.OakCounterCornerBlock;
import net.mcreator.lsfurniture.block.OakCounterBlock;
import net.mcreator.lsfurniture.block.OakCheckeredBlock;
import net.mcreator.lsfurniture.block.OakCheckedBlock;
import net.mcreator.lsfurniture.block.OakChairBlock;
import net.mcreator.lsfurniture.block.OakBrownSofaBlock;
import net.mcreator.lsfurniture.block.OakBlueSofaBlock;
import net.mcreator.lsfurniture.block.OakBlindsTopClosedBlock;
import net.mcreator.lsfurniture.block.OakBlindsTopBlock;
import net.mcreator.lsfurniture.block.OakBlindsBottomClosedBlock;
import net.mcreator.lsfurniture.block.OakBlindsBottomBlock;
import net.mcreator.lsfurniture.block.OakBlackSofaBlock;
import net.mcreator.lsfurniture.block.OakBigBricksBlock;
import net.mcreator.lsfurniture.block.OakAppleCreateBlock;
import net.mcreator.lsfurniture.block.MicrowaveBlock;
import net.mcreator.lsfurniture.block.MangroveWhiteStraightBlock;
import net.mcreator.lsfurniture.block.MangroveWhiteSofaBlock;
import net.mcreator.lsfurniture.block.MangroveWhiteRightEndBlock;
import net.mcreator.lsfurniture.block.MangroveWhiteLeftEndBlock;
import net.mcreator.lsfurniture.block.MangroveWhiteCornerBlock;
import net.mcreator.lsfurniture.block.MangroveWhiteChairBlock;
import net.mcreator.lsfurniture.block.MangroveWardrobeBlock;
import net.mcreator.lsfurniture.block.MangroveWardrobe2Block;
import net.mcreator.lsfurniture.block.MangroveWardrobe1Block;
import net.mcreator.lsfurniture.block.MangroveTableStraightBlock;
import net.mcreator.lsfurniture.block.MangroveTableNoneBlock;
import net.mcreator.lsfurniture.block.MangroveTableJunctionBlock;
import net.mcreator.lsfurniture.block.MangroveTableEndBlock;
import net.mcreator.lsfurniture.block.MangroveTableCrossBlock;
import net.mcreator.lsfurniture.block.MangroveTableCornerBlock;
import net.mcreator.lsfurniture.block.MangroveStoolBlock;
import net.mcreator.lsfurniture.block.MangroveSinkBlock;
import net.mcreator.lsfurniture.block.MangroveShelveBlock;
import net.mcreator.lsfurniture.block.MangrovePlankPath3Block;
import net.mcreator.lsfurniture.block.MangrovePlankPath2Block;
import net.mcreator.lsfurniture.block.MangrovePlankPath1Block;
import net.mcreator.lsfurniture.block.MangroveOvenBlock;
import net.mcreator.lsfurniture.block.MangroveMailBoxBlock;
import net.mcreator.lsfurniture.block.MangroveDrawerBlock;
import net.mcreator.lsfurniture.block.MangroveDeskBlock;
import net.mcreator.lsfurniture.block.MangroveCupboardVentOnBlock;
import net.mcreator.lsfurniture.block.MangroveCupboardVentBlock;
import net.mcreator.lsfurniture.block.MangroveCupboardCornerBlock;
import net.mcreator.lsfurniture.block.MangroveCupboardBlock;
import net.mcreator.lsfurniture.block.MangroveCounterCornerBlock;
import net.mcreator.lsfurniture.block.MangroveCounterBlock;
import net.mcreator.lsfurniture.block.MangroveChairBlock;
import net.mcreator.lsfurniture.block.KettleBlock;
import net.mcreator.lsfurniture.block.JungleWhiteStraightBlock;
import net.mcreator.lsfurniture.block.JungleWhiteSofaBlock;
import net.mcreator.lsfurniture.block.JungleWhiteRightEndBlock;
import net.mcreator.lsfurniture.block.JungleWhiteLeftEndBlock;
import net.mcreator.lsfurniture.block.JungleWhiteCornerBlock;
import net.mcreator.lsfurniture.block.JungleWhiteChairBlock;
import net.mcreator.lsfurniture.block.JungleWardrobeBlock;
import net.mcreator.lsfurniture.block.JungleWardrobe2Block;
import net.mcreator.lsfurniture.block.JungleWardrobe1Block;
import net.mcreator.lsfurniture.block.JungleTableStraightBlock;
import net.mcreator.lsfurniture.block.JungleTableNoneBlock;
import net.mcreator.lsfurniture.block.JungleTableJunctionBlock;
import net.mcreator.lsfurniture.block.JungleTableEndBlock;
import net.mcreator.lsfurniture.block.JungleTableCrossBlock;
import net.mcreator.lsfurniture.block.JungleTableCornerBlock;
import net.mcreator.lsfurniture.block.JungleStoolBlock;
import net.mcreator.lsfurniture.block.JungleSinkBlock;
import net.mcreator.lsfurniture.block.JungleShelveBlock;
import net.mcreator.lsfurniture.block.JunglePlankPath3Block;
import net.mcreator.lsfurniture.block.JunglePlankPath2Block;
import net.mcreator.lsfurniture.block.JunglePlankPath1Block;
import net.mcreator.lsfurniture.block.JungleOvenBlock;
import net.mcreator.lsfurniture.block.JungleMailBoxBlock;
import net.mcreator.lsfurniture.block.JungleDrawerBlock;
import net.mcreator.lsfurniture.block.JungleDeskBlock;
import net.mcreator.lsfurniture.block.JungleCupboardVentOnBlock;
import net.mcreator.lsfurniture.block.JungleCupboardVentBlock;
import net.mcreator.lsfurniture.block.JungleCupboardCornerBlock;
import net.mcreator.lsfurniture.block.JungleCupboardBlock;
import net.mcreator.lsfurniture.block.JungleCounterCornerBlock;
import net.mcreator.lsfurniture.block.JungleCounterBlock;
import net.mcreator.lsfurniture.block.JungleChairBlock;
import net.mcreator.lsfurniture.block.IronStraightBlock;
import net.mcreator.lsfurniture.block.IronNoneBlock;
import net.mcreator.lsfurniture.block.IronJunctionBlock;
import net.mcreator.lsfurniture.block.IronGolemTeddyBlock;
import net.mcreator.lsfurniture.block.IronEndBlock;
import net.mcreator.lsfurniture.block.IronCrossBlock;
import net.mcreator.lsfurniture.block.IronCornerBlock;
import net.mcreator.lsfurniture.block.HorseTeddyBlock;
import net.mcreator.lsfurniture.block.GranitePath92Block;
import net.mcreator.lsfurniture.block.GranitePath91Block;
import net.mcreator.lsfurniture.block.GranitePath8Block;
import net.mcreator.lsfurniture.block.GranitePath75Block;
import net.mcreator.lsfurniture.block.GranitePath74Block;
import net.mcreator.lsfurniture.block.GranitePath73Block;
import net.mcreator.lsfurniture.block.GranitePath72Block;
import net.mcreator.lsfurniture.block.GranitePath71Block;
import net.mcreator.lsfurniture.block.GranitePath6Block;
import net.mcreator.lsfurniture.block.GranitePath5Block;
import net.mcreator.lsfurniture.block.GranitePath4Block;
import net.mcreator.lsfurniture.block.GranitePath3Block;
import net.mcreator.lsfurniture.block.GranitePath2Block;
import net.mcreator.lsfurniture.block.GranitePath1Block;
import net.mcreator.lsfurniture.block.GranitePath133Block;
import net.mcreator.lsfurniture.block.GranitePath132Block;
import net.mcreator.lsfurniture.block.GranitePath131Block;
import net.mcreator.lsfurniture.block.GranitePath12Block;
import net.mcreator.lsfurniture.block.GranitePath11Block;
import net.mcreator.lsfurniture.block.GranitePath10Block;
import net.mcreator.lsfurniture.block.GhastTeddyBlock;
import net.mcreator.lsfurniture.block.FurnitureCrafterBetaBlock;
import net.mcreator.lsfurniture.block.FridgeFreezerBlockBlock;
import net.mcreator.lsfurniture.block.FridgeFreezerBlock2Block;
import net.mcreator.lsfurniture.block.FridgeFreezerBlock1Block;
import net.mcreator.lsfurniture.block.FramedOakWaveyBlock;
import net.mcreator.lsfurniture.block.FramedOakVerticalStripesBlock;
import net.mcreator.lsfurniture.block.FramedOakSwirlBlock;
import net.mcreator.lsfurniture.block.FramedOakSmallBricksBlock;
import net.mcreator.lsfurniture.block.FramedOakSlashBlock;
import net.mcreator.lsfurniture.block.FramedOakPlusBlock;
import net.mcreator.lsfurniture.block.FramedOakMosaicBlock;
import net.mcreator.lsfurniture.block.FramedOakHorizontalStripesBlock;
import net.mcreator.lsfurniture.block.FramedOakDunesBlock;
import net.mcreator.lsfurniture.block.FramedOakDiagonalBlock;
import net.mcreator.lsfurniture.block.FramedOakCheckeredBlock;
import net.mcreator.lsfurniture.block.FramedOakCheckedBlock;
import net.mcreator.lsfurniture.block.FramedOakBigBricksBlock;
import net.mcreator.lsfurniture.block.EndermanTeddyBlock;
import net.mcreator.lsfurniture.block.Dranier1PlateBlock;
import net.mcreator.lsfurniture.block.DrainerPlateBlock;
import net.mcreator.lsfurniture.block.DrainerBlock;
import net.mcreator.lsfurniture.block.Drainer2PlatesBlock;
import net.mcreator.lsfurniture.block.DioritePath92Block;
import net.mcreator.lsfurniture.block.DioritePath91Block;
import net.mcreator.lsfurniture.block.DioritePath8Block;
import net.mcreator.lsfurniture.block.DioritePath75Block;
import net.mcreator.lsfurniture.block.DioritePath74Block;
import net.mcreator.lsfurniture.block.DioritePath73Block;
import net.mcreator.lsfurniture.block.DioritePath72Block;
import net.mcreator.lsfurniture.block.DioritePath71Block;
import net.mcreator.lsfurniture.block.DioritePath6Block;
import net.mcreator.lsfurniture.block.DioritePath5Block;
import net.mcreator.lsfurniture.block.DioritePath4Block;
import net.mcreator.lsfurniture.block.DioritePath3Block;
import net.mcreator.lsfurniture.block.DioritePath2Block;
import net.mcreator.lsfurniture.block.DioritePath1Block;
import net.mcreator.lsfurniture.block.DioritePath133Block;
import net.mcreator.lsfurniture.block.DioritePath132Block;
import net.mcreator.lsfurniture.block.DioritePath131Block;
import net.mcreator.lsfurniture.block.DioritePath12Block;
import net.mcreator.lsfurniture.block.DioritePath11Block;
import net.mcreator.lsfurniture.block.DioritePath10Block;
import net.mcreator.lsfurniture.block.DeepslatePath92Block;
import net.mcreator.lsfurniture.block.DeepslatePath91Block;
import net.mcreator.lsfurniture.block.DeepslatePath8Block;
import net.mcreator.lsfurniture.block.DeepslatePath75Block;
import net.mcreator.lsfurniture.block.DeepslatePath74Block;
import net.mcreator.lsfurniture.block.DeepslatePath73Block;
import net.mcreator.lsfurniture.block.DeepslatePath72Block;
import net.mcreator.lsfurniture.block.DeepslatePath71Block;
import net.mcreator.lsfurniture.block.DeepslatePath6Block;
import net.mcreator.lsfurniture.block.DeepslatePath5Block;
import net.mcreator.lsfurniture.block.DeepslatePath4Block;
import net.mcreator.lsfurniture.block.DeepslatePath3Block;
import net.mcreator.lsfurniture.block.DeepslatePath2Block;
import net.mcreator.lsfurniture.block.DeepslatePath1Block;
import net.mcreator.lsfurniture.block.DeepslatePath133Block;
import net.mcreator.lsfurniture.block.DeepslatePath132Block;
import net.mcreator.lsfurniture.block.DeepslatePath131Block;
import net.mcreator.lsfurniture.block.DeepslatePath12Block;
import net.mcreator.lsfurniture.block.DeepslatePath11Block;
import net.mcreator.lsfurniture.block.DeepslatePath10Block;
import net.mcreator.lsfurniture.block.Darkoakwardrobe2Block;
import net.mcreator.lsfurniture.block.Darkoakwardrobe1Block;
import net.mcreator.lsfurniture.block.Darkoakwardrobe0Block;
import net.mcreator.lsfurniture.block.DarkoakPlankPath1Block;
import net.mcreator.lsfurniture.block.DarkoakDeskBlock;
import net.mcreator.lsfurniture.block.DarkOakYellowSofaBlock;
import net.mcreator.lsfurniture.block.DarkOakWhiteStraightBlock;
import net.mcreator.lsfurniture.block.DarkOakWhiteSofaBlock;
import net.mcreator.lsfurniture.block.DarkOakWhiteRightEndBlock;
import net.mcreator.lsfurniture.block.DarkOakWhiteLeftEndBlock;
import net.mcreator.lsfurniture.block.DarkOakWhiteCornerBlock;
import net.mcreator.lsfurniture.block.DarkOakWhiteChairBlock;
import net.mcreator.lsfurniture.block.DarkOakTableStraightBlock;
import net.mcreator.lsfurniture.block.DarkOakTableNoneBlock;
import net.mcreator.lsfurniture.block.DarkOakTableJunctionBlock;
import net.mcreator.lsfurniture.block.DarkOakTableEndBlock;
import net.mcreator.lsfurniture.block.DarkOakTableCrossBlock;
import net.mcreator.lsfurniture.block.DarkOakTableCornerBlock;
import net.mcreator.lsfurniture.block.DarkOakStoolBlock;
import net.mcreator.lsfurniture.block.DarkOakSinkBlock;
import net.mcreator.lsfurniture.block.DarkOakShelveBlock;
import net.mcreator.lsfurniture.block.DarkOakRedSofaBlock;
import net.mcreator.lsfurniture.block.DarkOakPurpleSofaBlock;
import net.mcreator.lsfurniture.block.DarkOakPlankPath3Block;
import net.mcreator.lsfurniture.block.DarkOakPlankPath2Block;
import net.mcreator.lsfurniture.block.DarkOakPinkSofaBlock;
import net.mcreator.lsfurniture.block.DarkOakOvenBlock;
import net.mcreator.lsfurniture.block.DarkOakOrangeSofaBlock;
import net.mcreator.lsfurniture.block.DarkOakMailBoxBlock;
import net.mcreator.lsfurniture.block.DarkOakMagentaSofaBlock;
import net.mcreator.lsfurniture.block.DarkOakLimeSofaBlock;
import net.mcreator.lsfurniture.block.DarkOakLightGraySofaBlock;
import net.mcreator.lsfurniture.block.DarkOakLightBlueSofaBlock;
import net.mcreator.lsfurniture.block.DarkOakGreenSofaBlock;
import net.mcreator.lsfurniture.block.DarkOakGraySofaBlock;
import net.mcreator.lsfurniture.block.DarkOakDrawerBlock;
import net.mcreator.lsfurniture.block.DarkOakCyanSofaBlock;
import net.mcreator.lsfurniture.block.DarkOakCupboardVentOnBlock;
import net.mcreator.lsfurniture.block.DarkOakCupboardVentBlock;
import net.mcreator.lsfurniture.block.DarkOakCupboardCornerBlock;
import net.mcreator.lsfurniture.block.DarkOakCupboardBlock;
import net.mcreator.lsfurniture.block.DarkOakCounterCornerBlock;
import net.mcreator.lsfurniture.block.DarkOakCounterBlock;
import net.mcreator.lsfurniture.block.DarkOakChairBlock;
import net.mcreator.lsfurniture.block.DarkOakBrownSofaBlock;
import net.mcreator.lsfurniture.block.DarkOakBlueSofaBlock;
import net.mcreator.lsfurniture.block.DarkOakBlindsTopClosedBlock;
import net.mcreator.lsfurniture.block.DarkOakBlindsTopBlock;
import net.mcreator.lsfurniture.block.DarkOakBlindsBottomClosedBlock;
import net.mcreator.lsfurniture.block.DarkOakBlindsBottomBlock;
import net.mcreator.lsfurniture.block.DarkOakBlackSofaBlock;
import net.mcreator.lsfurniture.block.CrimsonWhiteStraightBlock;
import net.mcreator.lsfurniture.block.CrimsonWhiteSofaBlock;
import net.mcreator.lsfurniture.block.CrimsonWhiteRightEndBlock;
import net.mcreator.lsfurniture.block.CrimsonWhiteLeftEndBlock;
import net.mcreator.lsfurniture.block.CrimsonWhiteCornerBlock;
import net.mcreator.lsfurniture.block.CrimsonWhiteChairBlock;
import net.mcreator.lsfurniture.block.CrimsonWardrobeBlock;
import net.mcreator.lsfurniture.block.CrimsonWardrobe2Block;
import net.mcreator.lsfurniture.block.CrimsonWardrobe1Block;
import net.mcreator.lsfurniture.block.CrimsonTableStraightBlock;
import net.mcreator.lsfurniture.block.CrimsonTableNoneBlock;
import net.mcreator.lsfurniture.block.CrimsonTableJunctionBlock;
import net.mcreator.lsfurniture.block.CrimsonTableEndBlock;
import net.mcreator.lsfurniture.block.CrimsonTableCrossBlock;
import net.mcreator.lsfurniture.block.CrimsonTableCornerBlock;
import net.mcreator.lsfurniture.block.CrimsonStoolBlock;
import net.mcreator.lsfurniture.block.CrimsonSinkBlock;
import net.mcreator.lsfurniture.block.CrimsonShelveBlock;
import net.mcreator.lsfurniture.block.CrimsonPlankPath3Block;
import net.mcreator.lsfurniture.block.CrimsonPlankPath2Block;
import net.mcreator.lsfurniture.block.CrimsonPlankPath1Block;
import net.mcreator.lsfurniture.block.CrimsonOvenBlock;
import net.mcreator.lsfurniture.block.CrimsonMailBoxBlock;
import net.mcreator.lsfurniture.block.CrimsonDrawerBlock;
import net.mcreator.lsfurniture.block.CrimsonDeskBlock;
import net.mcreator.lsfurniture.block.CrimsonCupboardVentOnBlock;
import net.mcreator.lsfurniture.block.CrimsonCupboardVentBlock;
import net.mcreator.lsfurniture.block.CrimsonCupboardCornerBlock;
import net.mcreator.lsfurniture.block.CrimsonCupboardBlock;
import net.mcreator.lsfurniture.block.CrimsonCounterCornerBlock;
import net.mcreator.lsfurniture.block.CrimsonCounterBlock;
import net.mcreator.lsfurniture.block.CrimsonChairBlock;
import net.mcreator.lsfurniture.block.CrepperTeddyBlock;
import net.mcreator.lsfurniture.block.ConnectingOakWaveyBlock;
import net.mcreator.lsfurniture.block.ConnectingOakVerticalStripesBlock;
import net.mcreator.lsfurniture.block.ConnectingOakSwirlBlock;
import net.mcreator.lsfurniture.block.ConnectingOakSmallBricksBlock;
import net.mcreator.lsfurniture.block.ConnectingOakSlashBlock;
import net.mcreator.lsfurniture.block.ConnectingOakPlusBlock;
import net.mcreator.lsfurniture.block.ConnectingOakMosaicBlock;
import net.mcreator.lsfurniture.block.ConnectingOakHorizontalStripesBlock;
import net.mcreator.lsfurniture.block.ConnectingOakGlassPaneBlock;
import net.mcreator.lsfurniture.block.ConnectingOakGlassBlock;
import net.mcreator.lsfurniture.block.ConnectingOakDunesBlock;
import net.mcreator.lsfurniture.block.ConnectingOakDiagonalBlock;
import net.mcreator.lsfurniture.block.ConnectingOakCheckeredBlock;
import net.mcreator.lsfurniture.block.ConnectingOakCheckedBlock;
import net.mcreator.lsfurniture.block.ConnectingOakBigBricksBlock;
import net.mcreator.lsfurniture.block.ConnectingDarkOakBigBricksBlock;
import net.mcreator.lsfurniture.block.ComputerOnBlock;
import net.mcreator.lsfurniture.block.ComputerOffBlock;
import net.mcreator.lsfurniture.block.ComputerMinecraftBlock;
import net.mcreator.lsfurniture.block.ComputerCODBlock;
import net.mcreator.lsfurniture.block.CobblestonePath3Block;
import net.mcreator.lsfurniture.block.CobblestonePath2Block;
import net.mcreator.lsfurniture.block.CobblestonePath1Block;
import net.mcreator.lsfurniture.block.ChickenTeddyBlock;
import net.mcreator.lsfurniture.block.CherryPlankPath3Block;
import net.mcreator.lsfurniture.block.CherryPlankPath2Block;
import net.mcreator.lsfurniture.block.CherryPlankPath1Block;
import net.mcreator.lsfurniture.block.BlazeTeddyBlock;
import net.mcreator.lsfurniture.block.BlackstonePath92Block;
import net.mcreator.lsfurniture.block.BlackstonePath91Block;
import net.mcreator.lsfurniture.block.BlackstonePath8Block;
import net.mcreator.lsfurniture.block.BlackstonePath75Block;
import net.mcreator.lsfurniture.block.BlackstonePath74Block;
import net.mcreator.lsfurniture.block.BlackstonePath73Block;
import net.mcreator.lsfurniture.block.BlackstonePath72Block;
import net.mcreator.lsfurniture.block.BlackstonePath71Block;
import net.mcreator.lsfurniture.block.BlackstonePath6Block;
import net.mcreator.lsfurniture.block.BlackstonePath5Block;
import net.mcreator.lsfurniture.block.BlackstonePath4Block;
import net.mcreator.lsfurniture.block.BlackstonePath3Block;
import net.mcreator.lsfurniture.block.BlackstonePath2Block;
import net.mcreator.lsfurniture.block.BlackstonePath1Block;
import net.mcreator.lsfurniture.block.BlackstonePath133Block;
import net.mcreator.lsfurniture.block.BlackstonePath132Block;
import net.mcreator.lsfurniture.block.BlackstonePath131Block;
import net.mcreator.lsfurniture.block.BlackstonePath12Block;
import net.mcreator.lsfurniture.block.BlackstonePath11Block;
import net.mcreator.lsfurniture.block.BlackstonePath10Block;
import net.mcreator.lsfurniture.block.BirchWhiteStarightBlock;
import net.mcreator.lsfurniture.block.BirchWhiteSofaBlock;
import net.mcreator.lsfurniture.block.BirchWhiteRightEndBlock;
import net.mcreator.lsfurniture.block.BirchWhiteLeftEndBlock;
import net.mcreator.lsfurniture.block.BirchWhiteCornerBlock;
import net.mcreator.lsfurniture.block.BirchWhiteChairBlock;
import net.mcreator.lsfurniture.block.BirchWardrobeBlock;
import net.mcreator.lsfurniture.block.BirchWardrobe2Block;
import net.mcreator.lsfurniture.block.BirchWardrobe1Block;
import net.mcreator.lsfurniture.block.BirchTableStraightBlock;
import net.mcreator.lsfurniture.block.BirchTableNoneBlock;
import net.mcreator.lsfurniture.block.BirchTableJunctionBlock;
import net.mcreator.lsfurniture.block.BirchTableEndBlock;
import net.mcreator.lsfurniture.block.BirchTableCrossBlock;
import net.mcreator.lsfurniture.block.BirchTableCornerBlock;
import net.mcreator.lsfurniture.block.BirchStoolBlock;
import net.mcreator.lsfurniture.block.BirchSinkBlock;
import net.mcreator.lsfurniture.block.BirchShelveBlock;
import net.mcreator.lsfurniture.block.BirchPlankPath3Block;
import net.mcreator.lsfurniture.block.BirchPlankPath2Block;
import net.mcreator.lsfurniture.block.BirchPlankPath1Block;
import net.mcreator.lsfurniture.block.BirchOvenBlock;
import net.mcreator.lsfurniture.block.BirchMailBoxBlock;
import net.mcreator.lsfurniture.block.BirchDrawerBlock;
import net.mcreator.lsfurniture.block.BirchDeskBlock;
import net.mcreator.lsfurniture.block.BirchCupboardVentOnBlock;
import net.mcreator.lsfurniture.block.BirchCupboardVentBlock;
import net.mcreator.lsfurniture.block.BirchCupboardCornerBlock;
import net.mcreator.lsfurniture.block.BirchCupboardBlock;
import net.mcreator.lsfurniture.block.BirchCounterCornerBlock;
import net.mcreator.lsfurniture.block.BirchCounterBlock;
import net.mcreator.lsfurniture.block.BirchChairBlock;
import net.mcreator.lsfurniture.block.BatTeddyBlock;
import net.mcreator.lsfurniture.block.BambooPlankPath3Block;
import net.mcreator.lsfurniture.block.BambooPlankPath2Block;
import net.mcreator.lsfurniture.block.BambooPlankPath1Block;
import net.mcreator.lsfurniture.block.AxolotlTeddyBlock;
import net.mcreator.lsfurniture.block.ApplePlateBlock;
import net.mcreator.lsfurniture.block.AnyWoolBlock;
import net.mcreator.lsfurniture.block.AnyWoodBlock;
import net.mcreator.lsfurniture.block.AnyStonePlankBlock;
import net.mcreator.lsfurniture.block.AnyStoneBlock;
import net.mcreator.lsfurniture.block.AnyPlanksBlock;
import net.mcreator.lsfurniture.block.AndesitePath92Block;
import net.mcreator.lsfurniture.block.AndesitePath91Block;
import net.mcreator.lsfurniture.block.AndesitePath8Block;
import net.mcreator.lsfurniture.block.AndesitePath75Block;
import net.mcreator.lsfurniture.block.AndesitePath74Block;
import net.mcreator.lsfurniture.block.AndesitePath73Block;
import net.mcreator.lsfurniture.block.AndesitePath72Block;
import net.mcreator.lsfurniture.block.AndesitePath71Block;
import net.mcreator.lsfurniture.block.AndesitePath6Block;
import net.mcreator.lsfurniture.block.AndesitePath5Block;
import net.mcreator.lsfurniture.block.AndesitePath4Block;
import net.mcreator.lsfurniture.block.AndesitePath3Block;
import net.mcreator.lsfurniture.block.AndesitePath2Block;
import net.mcreator.lsfurniture.block.AndesitePath1Block;
import net.mcreator.lsfurniture.block.AndesitePath133Block;
import net.mcreator.lsfurniture.block.AndesitePath132Block;
import net.mcreator.lsfurniture.block.AndesitePath131Block;
import net.mcreator.lsfurniture.block.AndesitePath12Block;
import net.mcreator.lsfurniture.block.AndesitePath11Block;
import net.mcreator.lsfurniture.block.AndesitePath10Block;
import net.mcreator.lsfurniture.block.AcaciaWhiteStarightBlock;
import net.mcreator.lsfurniture.block.AcaciaWhiteSofaBlock;
import net.mcreator.lsfurniture.block.AcaciaWhiteRightEndBlock;
import net.mcreator.lsfurniture.block.AcaciaWhiteLeftEndBlock;
import net.mcreator.lsfurniture.block.AcaciaWhiteCornerBlock;
import net.mcreator.lsfurniture.block.AcaciaWhiteChairBlock;
import net.mcreator.lsfurniture.block.AcaciaWardrobeBlock;
import net.mcreator.lsfurniture.block.AcaciaWardrobe2Block;
import net.mcreator.lsfurniture.block.AcaciaWardrobe1Block;
import net.mcreator.lsfurniture.block.AcaciaTableStraightBlock;
import net.mcreator.lsfurniture.block.AcaciaTableNoneBlock;
import net.mcreator.lsfurniture.block.AcaciaTableJunctionBlock;
import net.mcreator.lsfurniture.block.AcaciaTableEndBlock;
import net.mcreator.lsfurniture.block.AcaciaTableCrossBlock;
import net.mcreator.lsfurniture.block.AcaciaTableCornerBlock;
import net.mcreator.lsfurniture.block.AcaciaStoolBlock;
import net.mcreator.lsfurniture.block.AcaciaSinkBlock;
import net.mcreator.lsfurniture.block.AcaciaShelveBlock;
import net.mcreator.lsfurniture.block.AcaciaPlankPath3Block;
import net.mcreator.lsfurniture.block.AcaciaPlankPath2Block;
import net.mcreator.lsfurniture.block.AcaciaPlankPath1Block;
import net.mcreator.lsfurniture.block.AcaciaOvenBlock;
import net.mcreator.lsfurniture.block.AcaciaMailBoxBlock;
import net.mcreator.lsfurniture.block.AcaciaDrawerBlock;
import net.mcreator.lsfurniture.block.AcaciaDeskBlock;
import net.mcreator.lsfurniture.block.AcaciaCupboardVentOnBlock;
import net.mcreator.lsfurniture.block.AcaciaCupboardVentBlock;
import net.mcreator.lsfurniture.block.AcaciaCupboardCornerBlock;
import net.mcreator.lsfurniture.block.AcaciaCupboardBlock;
import net.mcreator.lsfurniture.block.AcaciaCounterCornerBlock;
import net.mcreator.lsfurniture.block.AcaciaCounterBlock;
import net.mcreator.lsfurniture.block.AcaciaChairBlock;
import net.mcreator.lsfurniture.LsFurnitureMod;

public class LsFurnitureModBlocks {
	public static final DeferredRegister<Block> REGISTRY = DeferredRegister.create(ForgeRegistries.BLOCKS, LsFurnitureMod.MODID);
	public static final RegistryObject<Block> FURNITURE_CRAFTER_BETA = REGISTRY.register("furniture_crafter_beta", () -> new FurnitureCrafterBetaBlock());
	public static final RegistryObject<Block> PLATE = REGISTRY.register("plate", () -> new PlateBlock());
	public static final RegistryObject<Block> COMPUTER_OFF = REGISTRY.register("computer_off", () -> new ComputerOffBlock());
	public static final RegistryObject<Block> TV_STAND_OFF = REGISTRY.register("tv_stand_off", () -> new TVStandOffBlock());
	public static final RegistryObject<Block> OAK_APPLE_CREATE = REGISTRY.register("oak_apple_create", () -> new OakAppleCreateBlock());
	public static final RegistryObject<Block> OAK_CREATE = REGISTRY.register("oak_create", () -> new OakCreateBlock());
	public static final RegistryObject<Block> OAK_WHITE_SOFA = REGISTRY.register("oak_white_sofa", () -> new OakWhiteSofaBlock());
	public static final RegistryObject<Block> SPRUCE_WHITE_SOFA = REGISTRY.register("spruce_white_sofa", () -> new SpruceWhiteSofaBlock());
	public static final RegistryObject<Block> BIRCH_WHITE_SOFA = REGISTRY.register("birch_white_sofa", () -> new BirchWhiteSofaBlock());
	public static final RegistryObject<Block> JUNGLE_WHITE_SOFA = REGISTRY.register("jungle_white_sofa", () -> new JungleWhiteSofaBlock());
	public static final RegistryObject<Block> ACACIA_WHITE_SOFA = REGISTRY.register("acacia_white_sofa", () -> new AcaciaWhiteSofaBlock());
	public static final RegistryObject<Block> DARK_OAK_WHITE_SOFA = REGISTRY.register("dark_oak_white_sofa", () -> new DarkOakWhiteSofaBlock());
	public static final RegistryObject<Block> MANGROVE_WHITE_SOFA = REGISTRY.register("mangrove_white_sofa", () -> new MangroveWhiteSofaBlock());
	public static final RegistryObject<Block> CRIMSON_WHITE_SOFA = REGISTRY.register("crimson_white_sofa", () -> new CrimsonWhiteSofaBlock());
	public static final RegistryObject<Block> WARPED_WHITE_SOFA = REGISTRY.register("warped_white_sofa", () -> new WarpedWhiteSofaBlock());
	public static final RegistryObject<Block> OAK_BLACK_SOFA = REGISTRY.register("oak_black_sofa", () -> new OakBlackSofaBlock());
	public static final RegistryObject<Block> OAK_BLUE_SOFA = REGISTRY.register("oak_blue_sofa", () -> new OakBlueSofaBlock());
	public static final RegistryObject<Block> OAK_BROWN_SOFA = REGISTRY.register("oak_brown_sofa", () -> new OakBrownSofaBlock());
	public static final RegistryObject<Block> OAK_CYAN_SOFA = REGISTRY.register("oak_cyan_sofa", () -> new OakCyanSofaBlock());
	public static final RegistryObject<Block> OAK_GRAY_SOFA = REGISTRY.register("oak_gray_sofa", () -> new OakGraySofaBlock());
	public static final RegistryObject<Block> OAK_GREEN_SOFA = REGISTRY.register("oak_green_sofa", () -> new OakGreenSofaBlock());
	public static final RegistryObject<Block> OAK_LIGHT_BLUE_SOFA = REGISTRY.register("oak_light_blue_sofa", () -> new OakLightBlueSofaBlock());
	public static final RegistryObject<Block> OAK_LIGHT_GRAY_SOFA = REGISTRY.register("oak_light_gray_sofa", () -> new OakLightGraySofaBlock());
	public static final RegistryObject<Block> OAK_LIME_SOFA = REGISTRY.register("oak_lime_sofa", () -> new OakLimeSofaBlock());
	public static final RegistryObject<Block> OAK_MAGENTA_SOFA = REGISTRY.register("oak_magenta_sofa", () -> new OakMagentaSofaBlock());
	public static final RegistryObject<Block> OAK_ORANGE_SOFA = REGISTRY.register("oak_orange_sofa", () -> new OakOrangeSofaBlock());
	public static final RegistryObject<Block> OAK_PINK_SOFA = REGISTRY.register("oak_pink_sofa", () -> new OakPinkSofaBlock());
	public static final RegistryObject<Block> OAK_PURPLE_SOFA = REGISTRY.register("oak_purple_sofa", () -> new OakPurpleSofaBlock());
	public static final RegistryObject<Block> OAK_RED_SOFA = REGISTRY.register("oak_red_sofa", () -> new OakRedSofaBlock());
	public static final RegistryObject<Block> OAK_YELLOW_SOFA = REGISTRY.register("oak_yellow_sofa", () -> new OakYellowSofaBlock());
	public static final RegistryObject<Block> DARK_OAK_BLACK_SOFA = REGISTRY.register("dark_oak_black_sofa", () -> new DarkOakBlackSofaBlock());
	public static final RegistryObject<Block> DARK_OAK_BLUE_SOFA = REGISTRY.register("dark_oak_blue_sofa", () -> new DarkOakBlueSofaBlock());
	public static final RegistryObject<Block> DARK_OAK_BROWN_SOFA = REGISTRY.register("dark_oak_brown_sofa", () -> new DarkOakBrownSofaBlock());
	public static final RegistryObject<Block> DARK_OAK_CYAN_SOFA = REGISTRY.register("dark_oak_cyan_sofa", () -> new DarkOakCyanSofaBlock());
	public static final RegistryObject<Block> DARK_OAK_GRAY_SOFA = REGISTRY.register("dark_oak_gray_sofa", () -> new DarkOakGraySofaBlock());
	public static final RegistryObject<Block> DARK_OAK_GREEN_SOFA = REGISTRY.register("dark_oak_green_sofa", () -> new DarkOakGreenSofaBlock());
	public static final RegistryObject<Block> DARK_OAK_LIGHT_BLUE_SOFA = REGISTRY.register("dark_oak_light_blue_sofa", () -> new DarkOakLightBlueSofaBlock());
	public static final RegistryObject<Block> DARK_OAK_LIGHT_GRAY_SOFA = REGISTRY.register("dark_oak_light_gray_sofa", () -> new DarkOakLightGraySofaBlock());
	public static final RegistryObject<Block> DARK_OAK_LIME_SOFA = REGISTRY.register("dark_oak_lime_sofa", () -> new DarkOakLimeSofaBlock());
	public static final RegistryObject<Block> DARK_OAK_MAGENTA_SOFA = REGISTRY.register("dark_oak_magenta_sofa", () -> new DarkOakMagentaSofaBlock());
	public static final RegistryObject<Block> DARK_OAK_ORANGE_SOFA = REGISTRY.register("dark_oak_orange_sofa", () -> new DarkOakOrangeSofaBlock());
	public static final RegistryObject<Block> DARK_OAK_PINK_SOFA = REGISTRY.register("dark_oak_pink_sofa", () -> new DarkOakPinkSofaBlock());
	public static final RegistryObject<Block> DARK_OAK_PURPLE_SOFA = REGISTRY.register("dark_oak_purple_sofa", () -> new DarkOakPurpleSofaBlock());
	public static final RegistryObject<Block> DARK_OAK_RED_SOFA = REGISTRY.register("dark_oak_red_sofa", () -> new DarkOakRedSofaBlock());
	public static final RegistryObject<Block> DARK_OAK_YELLOW_SOFA = REGISTRY.register("dark_oak_yellow_sofa", () -> new DarkOakYellowSofaBlock());
	public static final RegistryObject<Block> OAK_CHAIR = REGISTRY.register("oak_chair", () -> new OakChairBlock());
	public static final RegistryObject<Block> OAK_WHITE_CHAIR = REGISTRY.register("oak_white_chair", () -> new OakWhiteChairBlock());
	public static final RegistryObject<Block> SPRUCE_CHAIR = REGISTRY.register("spruce_chair", () -> new SpruceChairBlock());
	public static final RegistryObject<Block> SPRUCE_WHITE_CHAIR = REGISTRY.register("spruce_white_chair", () -> new SpruceWhiteChairBlock());
	public static final RegistryObject<Block> BIRCH_CHAIR = REGISTRY.register("birch_chair", () -> new BirchChairBlock());
	public static final RegistryObject<Block> BIRCH_WHITE_CHAIR = REGISTRY.register("birch_white_chair", () -> new BirchWhiteChairBlock());
	public static final RegistryObject<Block> JUNGLE_CHAIR = REGISTRY.register("jungle_chair", () -> new JungleChairBlock());
	public static final RegistryObject<Block> JUNGLE_WHITE_CHAIR = REGISTRY.register("jungle_white_chair", () -> new JungleWhiteChairBlock());
	public static final RegistryObject<Block> ACACIA_WHITE_CHAIR = REGISTRY.register("acacia_white_chair", () -> new AcaciaWhiteChairBlock());
	public static final RegistryObject<Block> DARK_OAK_CHAIR = REGISTRY.register("dark_oak_chair", () -> new DarkOakChairBlock());
	public static final RegistryObject<Block> DARK_OAK_WHITE_CHAIR = REGISTRY.register("dark_oak_white_chair", () -> new DarkOakWhiteChairBlock());
	public static final RegistryObject<Block> MANGROVE_CHAIR = REGISTRY.register("mangrove_chair", () -> new MangroveChairBlock());
	public static final RegistryObject<Block> MANGROVE_WHITE_CHAIR = REGISTRY.register("mangrove_white_chair", () -> new MangroveWhiteChairBlock());
	public static final RegistryObject<Block> CRIMSON_CHAIR = REGISTRY.register("crimson_chair", () -> new CrimsonChairBlock());
	public static final RegistryObject<Block> CRIMSON_WHITE_CHAIR = REGISTRY.register("crimson_white_chair", () -> new CrimsonWhiteChairBlock());
	public static final RegistryObject<Block> WARPED_CHAIR = REGISTRY.register("warped_chair", () -> new WarpedChairBlock());
	public static final RegistryObject<Block> WARPED_WHITE_CHAIR = REGISTRY.register("warped_white_chair", () -> new WarpedWhiteChairBlock());
	public static final RegistryObject<Block> OAK_STOOL = REGISTRY.register("oak_stool", () -> new OakStoolBlock());
	public static final RegistryObject<Block> SPRUCE_STOOL = REGISTRY.register("spruce_stool", () -> new SpruceStoolBlock());
	public static final RegistryObject<Block> BIRCH_STOOL = REGISTRY.register("birch_stool", () -> new BirchStoolBlock());
	public static final RegistryObject<Block> JUNGLE_STOOL = REGISTRY.register("jungle_stool", () -> new JungleStoolBlock());
	public static final RegistryObject<Block> ACACIA_STOOL = REGISTRY.register("acacia_stool", () -> new AcaciaStoolBlock());
	public static final RegistryObject<Block> DARK_OAK_STOOL = REGISTRY.register("dark_oak_stool", () -> new DarkOakStoolBlock());
	public static final RegistryObject<Block> MANGROVE_STOOL = REGISTRY.register("mangrove_stool", () -> new MangroveStoolBlock());
	public static final RegistryObject<Block> CRIMSON_STOOL = REGISTRY.register("crimson_stool", () -> new CrimsonStoolBlock());
	public static final RegistryObject<Block> WARPED_STOOL = REGISTRY.register("warped_stool", () -> new WarpedStoolBlock());
	public static final RegistryObject<Block> TABLE_NONE = REGISTRY.register("table_none", () -> new TableNoneBlock());
	public static final RegistryObject<Block> SPRUCE_TABLE_NONE = REGISTRY.register("spruce_table_none", () -> new SpruceTableNoneBlock());
	public static final RegistryObject<Block> BIRCH_TABLE_NONE = REGISTRY.register("birch_table_none", () -> new BirchTableNoneBlock());
	public static final RegistryObject<Block> JUNGLE_TABLE_NONE = REGISTRY.register("jungle_table_none", () -> new JungleTableNoneBlock());
	public static final RegistryObject<Block> ACACIA_TABLE_NONE = REGISTRY.register("acacia_table_none", () -> new AcaciaTableNoneBlock());
	public static final RegistryObject<Block> DARK_OAK_TABLE_NONE = REGISTRY.register("dark_oak_table_none", () -> new DarkOakTableNoneBlock());
	public static final RegistryObject<Block> MANGROVE_TABLE_NONE = REGISTRY.register("mangrove_table_none", () -> new MangroveTableNoneBlock());
	public static final RegistryObject<Block> CRIMSON_TABLE_NONE = REGISTRY.register("crimson_table_none", () -> new CrimsonTableNoneBlock());
	public static final RegistryObject<Block> WARPED_TABLE_NONE = REGISTRY.register("warped_table_none", () -> new WarpedTableNoneBlock());
	public static final RegistryObject<Block> IRON_NONE = REGISTRY.register("iron_none", () -> new IronNoneBlock());
	public static final RegistryObject<Block> OAK_WARDROBE_0 = REGISTRY.register("oak_wardrobe_0", () -> new OakWardrobe0Block());
	public static final RegistryObject<Block> SPRUCEWARDROBE = REGISTRY.register("sprucewardrobe", () -> new SprucewardrobeBlock());
	public static final RegistryObject<Block> BIRCH_WARDROBE = REGISTRY.register("birch_wardrobe", () -> new BirchWardrobeBlock());
	public static final RegistryObject<Block> JUNGLE_WARDROBE = REGISTRY.register("jungle_wardrobe", () -> new JungleWardrobeBlock());
	public static final RegistryObject<Block> ACACIA_WARDROBE = REGISTRY.register("acacia_wardrobe", () -> new AcaciaWardrobeBlock());
	public static final RegistryObject<Block> DARKOAKWARDROBE_0 = REGISTRY.register("darkoakwardrobe_0", () -> new Darkoakwardrobe0Block());
	public static final RegistryObject<Block> MANGROVE_WARDROBE = REGISTRY.register("mangrove_wardrobe", () -> new MangroveWardrobeBlock());
	public static final RegistryObject<Block> CRIMSON_WARDROBE = REGISTRY.register("crimson_wardrobe", () -> new CrimsonWardrobeBlock());
	public static final RegistryObject<Block> WARPED_WARDROBE = REGISTRY.register("warped_wardrobe", () -> new WarpedWardrobeBlock());
	public static final RegistryObject<Block> OAK_DESK = REGISTRY.register("oak_desk", () -> new OakDeskBlock());
	public static final RegistryObject<Block> SPRUCE_DESK = REGISTRY.register("spruce_desk", () -> new SpruceDeskBlock());
	public static final RegistryObject<Block> BIRCH_DESK = REGISTRY.register("birch_desk", () -> new BirchDeskBlock());
	public static final RegistryObject<Block> JUNGLE_DESK = REGISTRY.register("jungle_desk", () -> new JungleDeskBlock());
	public static final RegistryObject<Block> ACACIA_DESK = REGISTRY.register("acacia_desk", () -> new AcaciaDeskBlock());
	public static final RegistryObject<Block> DARKOAK_DESK = REGISTRY.register("darkoak_desk", () -> new DarkoakDeskBlock());
	public static final RegistryObject<Block> MANGROVE_DESK = REGISTRY.register("mangrove_desk", () -> new MangroveDeskBlock());
	public static final RegistryObject<Block> CRIMSON_DESK = REGISTRY.register("crimson_desk", () -> new CrimsonDeskBlock());
	public static final RegistryObject<Block> WARPED_DESK = REGISTRY.register("warped_desk", () -> new WarpedDeskBlock());
	public static final RegistryObject<Block> OAK_DRAWER = REGISTRY.register("oak_drawer", () -> new OakDrawerBlock());
	public static final RegistryObject<Block> SPRUCE_DRAWER = REGISTRY.register("spruce_drawer", () -> new SpruceDrawerBlock());
	public static final RegistryObject<Block> BIRCH_DRAWER = REGISTRY.register("birch_drawer", () -> new BirchDrawerBlock());
	public static final RegistryObject<Block> JUNGLE_DRAWER = REGISTRY.register("jungle_drawer", () -> new JungleDrawerBlock());
	public static final RegistryObject<Block> ACACIA_DRAWER = REGISTRY.register("acacia_drawer", () -> new AcaciaDrawerBlock());
	public static final RegistryObject<Block> DARK_OAK_DRAWER = REGISTRY.register("dark_oak_drawer", () -> new DarkOakDrawerBlock());
	public static final RegistryObject<Block> MANGROVE_DRAWER = REGISTRY.register("mangrove_drawer", () -> new MangroveDrawerBlock());
	public static final RegistryObject<Block> CRIMSON_DRAWER = REGISTRY.register("crimson_drawer", () -> new CrimsonDrawerBlock());
	public static final RegistryObject<Block> WARPED_DRAWER = REGISTRY.register("warped_drawer", () -> new WarpedDrawerBlock());
	public static final RegistryObject<Block> OAK_COUNTER = REGISTRY.register("oak_counter", () -> new OakCounterBlock());
	public static final RegistryObject<Block> SPRUCE_COUNTER = REGISTRY.register("spruce_counter", () -> new SpruceCounterBlock());
	public static final RegistryObject<Block> BIRCH_COUNTER = REGISTRY.register("birch_counter", () -> new BirchCounterBlock());
	public static final RegistryObject<Block> JUNGLE_COUNTER = REGISTRY.register("jungle_counter", () -> new JungleCounterBlock());
	public static final RegistryObject<Block> DARK_OAK_COUNTER = REGISTRY.register("dark_oak_counter", () -> new DarkOakCounterBlock());
	public static final RegistryObject<Block> MANGROVE_COUNTER = REGISTRY.register("mangrove_counter", () -> new MangroveCounterBlock());
	public static final RegistryObject<Block> CRIMSON_COUNTER = REGISTRY.register("crimson_counter", () -> new CrimsonCounterBlock());
	public static final RegistryObject<Block> WARPED_COUNTER = REGISTRY.register("warped_counter", () -> new WarpedCounterBlock());
	public static final RegistryObject<Block> OAK_SINK = REGISTRY.register("oak_sink", () -> new OakSinkBlock());
	public static final RegistryObject<Block> SPRUCE_SINK = REGISTRY.register("spruce_sink", () -> new SpruceSinkBlock());
	public static final RegistryObject<Block> BIRCH_SINK = REGISTRY.register("birch_sink", () -> new BirchSinkBlock());
	public static final RegistryObject<Block> JUNGLE_SINK = REGISTRY.register("jungle_sink", () -> new JungleSinkBlock());
	public static final RegistryObject<Block> ACACIA_SINK = REGISTRY.register("acacia_sink", () -> new AcaciaSinkBlock());
	public static final RegistryObject<Block> DARK_OAK_SINK = REGISTRY.register("dark_oak_sink", () -> new DarkOakSinkBlock());
	public static final RegistryObject<Block> MANGROVE_SINK = REGISTRY.register("mangrove_sink", () -> new MangroveSinkBlock());
	public static final RegistryObject<Block> CRIMSON_SINK = REGISTRY.register("crimson_sink", () -> new CrimsonSinkBlock());
	public static final RegistryObject<Block> WARPED_SINK = REGISTRY.register("warped_sink", () -> new WarpedSinkBlock());
	public static final RegistryObject<Block> OAK_OVEN = REGISTRY.register("oak_oven", () -> new OakOvenBlock());
	public static final RegistryObject<Block> SPRUCE_OVEN = REGISTRY.register("spruce_oven", () -> new SpruceOvenBlock());
	public static final RegistryObject<Block> BIRCH_OVEN = REGISTRY.register("birch_oven", () -> new BirchOvenBlock());
	public static final RegistryObject<Block> JUNGLE_OVEN = REGISTRY.register("jungle_oven", () -> new JungleOvenBlock());
	public static final RegistryObject<Block> ACACIA_OVEN = REGISTRY.register("acacia_oven", () -> new AcaciaOvenBlock());
	public static final RegistryObject<Block> DARK_OAK_OVEN = REGISTRY.register("dark_oak_oven", () -> new DarkOakOvenBlock());
	public static final RegistryObject<Block> MANGROVE_OVEN = REGISTRY.register("mangrove_oven", () -> new MangroveOvenBlock());
	public static final RegistryObject<Block> WARPED_OVEN = REGISTRY.register("warped_oven", () -> new WarpedOvenBlock());
	public static final RegistryObject<Block> CRIMSON_OVEN = REGISTRY.register("crimson_oven", () -> new CrimsonOvenBlock());
	public static final RegistryObject<Block> OAK_CUPBOARD = REGISTRY.register("oak_cupboard", () -> new OakCupboardBlock());
	public static final RegistryObject<Block> SPRUCE_CUPBOARD = REGISTRY.register("spruce_cupboard", () -> new SpruceCupboardBlock());
	public static final RegistryObject<Block> BIRCH_CUPBOARD = REGISTRY.register("birch_cupboard", () -> new BirchCupboardBlock());
	public static final RegistryObject<Block> JUNGLE_CUPBOARD = REGISTRY.register("jungle_cupboard", () -> new JungleCupboardBlock());
	public static final RegistryObject<Block> ACACIA_CUPBOARD = REGISTRY.register("acacia_cupboard", () -> new AcaciaCupboardBlock());
	public static final RegistryObject<Block> DARK_OAK_CUPBOARD = REGISTRY.register("dark_oak_cupboard", () -> new DarkOakCupboardBlock());
	public static final RegistryObject<Block> MANGROVE_CUPBOARD = REGISTRY.register("mangrove_cupboard", () -> new MangroveCupboardBlock());
	public static final RegistryObject<Block> CRIMSON_CUPBOARD = REGISTRY.register("crimson_cupboard", () -> new CrimsonCupboardBlock());
	public static final RegistryObject<Block> WARPED_CUPBOARD = REGISTRY.register("warped_cupboard", () -> new WarpedCupboardBlock());
	public static final RegistryObject<Block> OAK_CUPBOARD_VENT = REGISTRY.register("oak_cupboard_vent", () -> new OakCupboardVentBlock());
	public static final RegistryObject<Block> SPRUCE_CUPBOARD_VENT = REGISTRY.register("spruce_cupboard_vent", () -> new SpruceCupboardVentBlock());
	public static final RegistryObject<Block> BIRCH_CUPBOARD_VENT = REGISTRY.register("birch_cupboard_vent", () -> new BirchCupboardVentBlock());
	public static final RegistryObject<Block> JUNGLE_CUPBOARD_VENT = REGISTRY.register("jungle_cupboard_vent", () -> new JungleCupboardVentBlock());
	public static final RegistryObject<Block> ACACIA_CUPBOARD_VENT = REGISTRY.register("acacia_cupboard_vent", () -> new AcaciaCupboardVentBlock());
	public static final RegistryObject<Block> DARK_OAK_CUPBOARD_VENT = REGISTRY.register("dark_oak_cupboard_vent", () -> new DarkOakCupboardVentBlock());
	public static final RegistryObject<Block> MANGROVE_CUPBOARD_VENT = REGISTRY.register("mangrove_cupboard_vent", () -> new MangroveCupboardVentBlock());
	public static final RegistryObject<Block> CRIMSON_CUPBOARD_VENT = REGISTRY.register("crimson_cupboard_vent", () -> new CrimsonCupboardVentBlock());
	public static final RegistryObject<Block> WARPED_CUPBOARD_VENT = REGISTRY.register("warped_cupboard_vent", () -> new WarpedCupboardVentBlock());
	public static final RegistryObject<Block> OAK_SHELVE = REGISTRY.register("oak_shelve", () -> new OakShelveBlock());
	public static final RegistryObject<Block> SPRUCE_SHELVE = REGISTRY.register("spruce_shelve", () -> new SpruceShelveBlock());
	public static final RegistryObject<Block> BIRCH_SHELVE = REGISTRY.register("birch_shelve", () -> new BirchShelveBlock());
	public static final RegistryObject<Block> JUNGLE_SHELVE = REGISTRY.register("jungle_shelve", () -> new JungleShelveBlock());
	public static final RegistryObject<Block> ACACIA_SHELVE = REGISTRY.register("acacia_shelve", () -> new AcaciaShelveBlock());
	public static final RegistryObject<Block> DARK_OAK_SHELVE = REGISTRY.register("dark_oak_shelve", () -> new DarkOakShelveBlock());
	public static final RegistryObject<Block> MANGROVE_SHELVE = REGISTRY.register("mangrove_shelve", () -> new MangroveShelveBlock());
	public static final RegistryObject<Block> CRIMSON_SHELVE = REGISTRY.register("crimson_shelve", () -> new CrimsonShelveBlock());
	public static final RegistryObject<Block> WARPED_SHELVE = REGISTRY.register("warped_shelve", () -> new WarpedShelveBlock());
	public static final RegistryObject<Block> OAK_MAIL_BOX = REGISTRY.register("oak_mail_box", () -> new OakMailBoxBlock());
	public static final RegistryObject<Block> SPRUCE_MAIL_BOX = REGISTRY.register("spruce_mail_box", () -> new SpruceMailBoxBlock());
	public static final RegistryObject<Block> BIRCH_MAIL_BOX = REGISTRY.register("birch_mail_box", () -> new BirchMailBoxBlock());
	public static final RegistryObject<Block> JUNGLE_MAIL_BOX = REGISTRY.register("jungle_mail_box", () -> new JungleMailBoxBlock());
	public static final RegistryObject<Block> ACACIA_MAIL_BOX = REGISTRY.register("acacia_mail_box", () -> new AcaciaMailBoxBlock());
	public static final RegistryObject<Block> DARK_OAK_MAIL_BOX = REGISTRY.register("dark_oak_mail_box", () -> new DarkOakMailBoxBlock());
	public static final RegistryObject<Block> MANGROVE_MAIL_BOX = REGISTRY.register("mangrove_mail_box", () -> new MangroveMailBoxBlock());
	public static final RegistryObject<Block> CRIMSON_MAIL_BOX = REGISTRY.register("crimson_mail_box", () -> new CrimsonMailBoxBlock());
	public static final RegistryObject<Block> WARPED_MAIL_BOX = REGISTRY.register("warped_mail_box", () -> new WarpedMailBoxBlock());
	public static final RegistryObject<Block> OAK_BLINDS_TOP = REGISTRY.register("oak_blinds_top", () -> new OakBlindsTopBlock());
	public static final RegistryObject<Block> DARK_OAK_BLINDS_TOP = REGISTRY.register("dark_oak_blinds_top", () -> new DarkOakBlindsTopBlock());
	public static final RegistryObject<Block> FRIDGE_FREEZER_BLOCK = REGISTRY.register("fridge_freezer_block", () -> new FridgeFreezerBlockBlock());
	public static final RegistryObject<Block> OVEN_VENT = REGISTRY.register("oven_vent", () -> new OvenVentBlock());
	public static final RegistryObject<Block> DRAINER = REGISTRY.register("drainer", () -> new DrainerBlock());
	public static final RegistryObject<Block> RACK = REGISTRY.register("rack", () -> new RackBlock());
	public static final RegistryObject<Block> MICROWAVE = REGISTRY.register("microwave", () -> new MicrowaveBlock());
	public static final RegistryObject<Block> KETTLE = REGISTRY.register("kettle", () -> new KettleBlock());
	public static final RegistryObject<Block> TOASTER = REGISTRY.register("toaster", () -> new ToasterBlock());
	public static final RegistryObject<Block> BAT_TEDDY = REGISTRY.register("bat_teddy", () -> new BatTeddyBlock());
	public static final RegistryObject<Block> BLAZE_TEDDY = REGISTRY.register("blaze_teddy", () -> new BlazeTeddyBlock());
	public static final RegistryObject<Block> CHICKEN_TEDDY = REGISTRY.register("chicken_teddy", () -> new ChickenTeddyBlock());
	public static final RegistryObject<Block> CREPPER_TEDDY = REGISTRY.register("crepper_teddy", () -> new CrepperTeddyBlock());
	public static final RegistryObject<Block> ENDERMAN_TEDDY = REGISTRY.register("enderman_teddy", () -> new EndermanTeddyBlock());
	public static final RegistryObject<Block> GHAST_TEDDY = REGISTRY.register("ghast_teddy", () -> new GhastTeddyBlock());
	public static final RegistryObject<Block> IRON_GOLEM_TEDDY = REGISTRY.register("iron_golem_teddy", () -> new IronGolemTeddyBlock());
	public static final RegistryObject<Block> POLAR_BEAR_TEDDY = REGISTRY.register("polar_bear_teddy", () -> new PolarBearTeddyBlock());
	public static final RegistryObject<Block> SLIME_TEDDY = REGISTRY.register("slime_teddy", () -> new SlimeTeddyBlock());
	public static final RegistryObject<Block> SNOW_GOLEM_TEDDY = REGISTRY.register("snow_golem_teddy", () -> new SnowGolemTeddyBlock());
	public static final RegistryObject<Block> HORSE_TEDDY = REGISTRY.register("horse_teddy", () -> new HorseTeddyBlock());
	public static final RegistryObject<Block> AXOLOTL_TEDDY = REGISTRY.register("axolotl_teddy", () -> new AxolotlTeddyBlock());
	public static final RegistryObject<Block> COBBLESTONE_PATH_2 = REGISTRY.register("cobblestone_path_2", () -> new CobblestonePath2Block());
	public static final RegistryObject<Block> COBBLESTONE_PATH_1 = REGISTRY.register("cobblestone_path_1", () -> new CobblestonePath1Block());
	public static final RegistryObject<Block> COBBLESTONE_PATH_3 = REGISTRY.register("cobblestone_path_3", () -> new CobblestonePath3Block());
	public static final RegistryObject<Block> STONE_PATH_1 = REGISTRY.register("stone_path_1", () -> new StonePath1Block());
	public static final RegistryObject<Block> BLACKSTONE_PATH_1 = REGISTRY.register("blackstone_path_1", () -> new BlackstonePath1Block());
	public static final RegistryObject<Block> DEEPSLATE_PATH_1 = REGISTRY.register("deepslate_path_1", () -> new DeepslatePath1Block());
	public static final RegistryObject<Block> ANDESITE_PATH_1 = REGISTRY.register("andesite_path_1", () -> new AndesitePath1Block());
	public static final RegistryObject<Block> DIORITE_PATH_1 = REGISTRY.register("diorite_path_1", () -> new DioritePath1Block());
	public static final RegistryObject<Block> GRANITE_PATH_1 = REGISTRY.register("granite_path_1", () -> new GranitePath1Block());
	public static final RegistryObject<Block> OAK_PLANK_PATH_1 = REGISTRY.register("oak_plank_path_1", () -> new OakPlankPath1Block());
	public static final RegistryObject<Block> SPRUCE_PLANK_PATH_1 = REGISTRY.register("spruce_plank_path_1", () -> new SprucePlankPath1Block());
	public static final RegistryObject<Block> BIRCH_PLANK_PATH_1 = REGISTRY.register("birch_plank_path_1", () -> new BirchPlankPath1Block());
	public static final RegistryObject<Block> JUNGLE_PLANK_PATH_1 = REGISTRY.register("jungle_plank_path_1", () -> new JunglePlankPath1Block());
	public static final RegistryObject<Block> ACACIA_PLANK_PATH_1 = REGISTRY.register("acacia_plank_path_1", () -> new AcaciaPlankPath1Block());
	public static final RegistryObject<Block> DARKOAK_PLANK_PATH_1 = REGISTRY.register("darkoak_plank_path_1", () -> new DarkoakPlankPath1Block());
	public static final RegistryObject<Block> MANGROVE_PLANK_PATH_1 = REGISTRY.register("mangrove_plank_path_1", () -> new MangrovePlankPath1Block());
	public static final RegistryObject<Block> CRIMSON_PLANK_PATH_1 = REGISTRY.register("crimson_plank_path_1", () -> new CrimsonPlankPath1Block());
	public static final RegistryObject<Block> WARPED_PLANK_PATH_1 = REGISTRY.register("warped_plank_path_1", () -> new WarpedPlankPath1Block());
	public static final RegistryObject<Block> CHERRY_PLANK_PATH_1 = REGISTRY.register("cherry_plank_path_1", () -> new CherryPlankPath1Block());
	public static final RegistryObject<Block> BAMBOO_PLANK_PATH_1 = REGISTRY.register("bamboo_plank_path_1", () -> new BambooPlankPath1Block());
	public static final RegistryObject<Block> STONE_PATH_2 = REGISTRY.register("stone_path_2", () -> new StonePath2Block());
	public static final RegistryObject<Block> BLACKSTONE_PATH_2 = REGISTRY.register("blackstone_path_2", () -> new BlackstonePath2Block());
	public static final RegistryObject<Block> DEEPSLATE_PATH_2 = REGISTRY.register("deepslate_path_2", () -> new DeepslatePath2Block());
	public static final RegistryObject<Block> ANDESITE_PATH_2 = REGISTRY.register("andesite_path_2", () -> new AndesitePath2Block());
	public static final RegistryObject<Block> DIORITE_PATH_2 = REGISTRY.register("diorite_path_2", () -> new DioritePath2Block());
	public static final RegistryObject<Block> GRANITE_PATH_2 = REGISTRY.register("granite_path_2", () -> new GranitePath2Block());
	public static final RegistryObject<Block> OAK_PLANK_PATH_2 = REGISTRY.register("oak_plank_path_2", () -> new OakPlankPath2Block());
	public static final RegistryObject<Block> SPRUCE_PLANK_PATH_2 = REGISTRY.register("spruce_plank_path_2", () -> new SprucePlankPath2Block());
	public static final RegistryObject<Block> BIRCH_PLANK_PATH_2 = REGISTRY.register("birch_plank_path_2", () -> new BirchPlankPath2Block());
	public static final RegistryObject<Block> JUNGLE_PLANK_PATH_2 = REGISTRY.register("jungle_plank_path_2", () -> new JunglePlankPath2Block());
	public static final RegistryObject<Block> ACACIA_PLANK_PATH_2 = REGISTRY.register("acacia_plank_path_2", () -> new AcaciaPlankPath2Block());
	public static final RegistryObject<Block> DARK_OAK_PLANK_PATH_2 = REGISTRY.register("dark_oak_plank_path_2", () -> new DarkOakPlankPath2Block());
	public static final RegistryObject<Block> MANGROVE_PLANK_PATH_2 = REGISTRY.register("mangrove_plank_path_2", () -> new MangrovePlankPath2Block());
	public static final RegistryObject<Block> CRIMSON_PLANK_PATH_2 = REGISTRY.register("crimson_plank_path_2", () -> new CrimsonPlankPath2Block());
	public static final RegistryObject<Block> WARPED_PLANK_PATH_2 = REGISTRY.register("warped_plank_path_2", () -> new WarpedPlankPath2Block());
	public static final RegistryObject<Block> CHERRY_PLANK_PATH_2 = REGISTRY.register("cherry_plank_path_2", () -> new CherryPlankPath2Block());
	public static final RegistryObject<Block> BAMBOO_PLANK_PATH_2 = REGISTRY.register("bamboo_plank_path_2", () -> new BambooPlankPath2Block());
	public static final RegistryObject<Block> STONE_PATH_3 = REGISTRY.register("stone_path_3", () -> new StonePath3Block());
	public static final RegistryObject<Block> BLACKSTONE_PATH_3 = REGISTRY.register("blackstone_path_3", () -> new BlackstonePath3Block());
	public static final RegistryObject<Block> DEEPSLATE_PATH_3 = REGISTRY.register("deepslate_path_3", () -> new DeepslatePath3Block());
	public static final RegistryObject<Block> ANDESITE_PATH_3 = REGISTRY.register("andesite_path_3", () -> new AndesitePath3Block());
	public static final RegistryObject<Block> DIORITE_PATH_3 = REGISTRY.register("diorite_path_3", () -> new DioritePath3Block());
	public static final RegistryObject<Block> GRANITE_PATH_3 = REGISTRY.register("granite_path_3", () -> new GranitePath3Block());
	public static final RegistryObject<Block> STONE_PATH_4 = REGISTRY.register("stone_path_4", () -> new StonePath4Block());
	public static final RegistryObject<Block> BLACKSTONE_PATH_4 = REGISTRY.register("blackstone_path_4", () -> new BlackstonePath4Block());
	public static final RegistryObject<Block> DEEPSLATE_PATH_4 = REGISTRY.register("deepslate_path_4", () -> new DeepslatePath4Block());
	public static final RegistryObject<Block> ANDESITE_PATH_4 = REGISTRY.register("andesite_path_4", () -> new AndesitePath4Block());
	public static final RegistryObject<Block> DIORITE_PATH_4 = REGISTRY.register("diorite_path_4", () -> new DioritePath4Block());
	public static final RegistryObject<Block> GRANITE_PATH_4 = REGISTRY.register("granite_path_4", () -> new GranitePath4Block());
	public static final RegistryObject<Block> STONE_PATH_5 = REGISTRY.register("stone_path_5", () -> new StonePath5Block());
	public static final RegistryObject<Block> BLACKSTONE_PATH_5 = REGISTRY.register("blackstone_path_5", () -> new BlackstonePath5Block());
	public static final RegistryObject<Block> DEEPSLATE_PATH_5 = REGISTRY.register("deepslate_path_5", () -> new DeepslatePath5Block());
	public static final RegistryObject<Block> ANDESITE_PATH_5 = REGISTRY.register("andesite_path_5", () -> new AndesitePath5Block());
	public static final RegistryObject<Block> DIORITE_PATH_5 = REGISTRY.register("diorite_path_5", () -> new DioritePath5Block());
	public static final RegistryObject<Block> GRANITE_PATH_5 = REGISTRY.register("granite_path_5", () -> new GranitePath5Block());
	public static final RegistryObject<Block> OAK_PLANK_PATH_3 = REGISTRY.register("oak_plank_path_3", () -> new OakPlankPath3Block());
	public static final RegistryObject<Block> SPRUCE_PLANK_PATH_3 = REGISTRY.register("spruce_plank_path_3", () -> new SprucePlankPath3Block());
	public static final RegistryObject<Block> BIRCH_PLANK_PATH_3 = REGISTRY.register("birch_plank_path_3", () -> new BirchPlankPath3Block());
	public static final RegistryObject<Block> JUNGLE_PLANK_PATH_3 = REGISTRY.register("jungle_plank_path_3", () -> new JunglePlankPath3Block());
	public static final RegistryObject<Block> ACACIA_PLANK_PATH_3 = REGISTRY.register("acacia_plank_path_3", () -> new AcaciaPlankPath3Block());
	public static final RegistryObject<Block> DARK_OAK_PLANK_PATH_3 = REGISTRY.register("dark_oak_plank_path_3", () -> new DarkOakPlankPath3Block());
	public static final RegistryObject<Block> MANGROVE_PLANK_PATH_3 = REGISTRY.register("mangrove_plank_path_3", () -> new MangrovePlankPath3Block());
	public static final RegistryObject<Block> CRIMSON_PLANK_PATH_3 = REGISTRY.register("crimson_plank_path_3", () -> new CrimsonPlankPath3Block());
	public static final RegistryObject<Block> WARPED_PLANK_PATH_3 = REGISTRY.register("warped_plank_path_3", () -> new WarpedPlankPath3Block());
	public static final RegistryObject<Block> CHERRY_PLANK_PATH_3 = REGISTRY.register("cherry_plank_path_3", () -> new CherryPlankPath3Block());
	public static final RegistryObject<Block> BAMBOO_PLANK_PATH_3 = REGISTRY.register("bamboo_plank_path_3", () -> new BambooPlankPath3Block());
	public static final RegistryObject<Block> STONE_PATH_6 = REGISTRY.register("stone_path_6", () -> new StonePath6Block());
	public static final RegistryObject<Block> BLACKSTONE_PATH_6 = REGISTRY.register("blackstone_path_6", () -> new BlackstonePath6Block());
	public static final RegistryObject<Block> DEEPSLATE_PATH_6 = REGISTRY.register("deepslate_path_6", () -> new DeepslatePath6Block());
	public static final RegistryObject<Block> ANDESITE_PATH_6 = REGISTRY.register("andesite_path_6", () -> new AndesitePath6Block());
	public static final RegistryObject<Block> DIORITE_PATH_6 = REGISTRY.register("diorite_path_6", () -> new DioritePath6Block());
	public static final RegistryObject<Block> GRANITE_PATH_6 = REGISTRY.register("granite_path_6", () -> new GranitePath6Block());
	public static final RegistryObject<Block> STONE_PATH_71 = REGISTRY.register("stone_path_71", () -> new StonePath71Block());
	public static final RegistryObject<Block> BLACKSTONE_PATH_71 = REGISTRY.register("blackstone_path_71", () -> new BlackstonePath71Block());
	public static final RegistryObject<Block> DEEPSLATE_PATH_71 = REGISTRY.register("deepslate_path_71", () -> new DeepslatePath71Block());
	public static final RegistryObject<Block> ANDESITE_PATH_71 = REGISTRY.register("andesite_path_71", () -> new AndesitePath71Block());
	public static final RegistryObject<Block> DIORITE_PATH_71 = REGISTRY.register("diorite_path_71", () -> new DioritePath71Block());
	public static final RegistryObject<Block> GRANITE_PATH_71 = REGISTRY.register("granite_path_71", () -> new GranitePath71Block());
	public static final RegistryObject<Block> STONE_PATH_72 = REGISTRY.register("stone_path_72", () -> new StonePath72Block());
	public static final RegistryObject<Block> BLACKSTONE_PATH_72 = REGISTRY.register("blackstone_path_72", () -> new BlackstonePath72Block());
	public static final RegistryObject<Block> DEEPSLATE_PATH_72 = REGISTRY.register("deepslate_path_72", () -> new DeepslatePath72Block());
	public static final RegistryObject<Block> ANDESITE_PATH_72 = REGISTRY.register("andesite_path_72", () -> new AndesitePath72Block());
	public static final RegistryObject<Block> DIORITE_PATH_72 = REGISTRY.register("diorite_path_72", () -> new DioritePath72Block());
	public static final RegistryObject<Block> GRANITE_PATH_72 = REGISTRY.register("granite_path_72", () -> new GranitePath72Block());
	public static final RegistryObject<Block> STONE_PATH_73 = REGISTRY.register("stone_path_73", () -> new StonePath73Block());
	public static final RegistryObject<Block> BLACKSTONE_PATH_73 = REGISTRY.register("blackstone_path_73", () -> new BlackstonePath73Block());
	public static final RegistryObject<Block> DEEPSLATE_PATH_73 = REGISTRY.register("deepslate_path_73", () -> new DeepslatePath73Block());
	public static final RegistryObject<Block> ANDESITE_PATH_73 = REGISTRY.register("andesite_path_73", () -> new AndesitePath73Block());
	public static final RegistryObject<Block> DIORITE_PATH_73 = REGISTRY.register("diorite_path_73", () -> new DioritePath73Block());
	public static final RegistryObject<Block> GRANITE_PATH_73 = REGISTRY.register("granite_path_73", () -> new GranitePath73Block());
	public static final RegistryObject<Block> STONE_PATH_74 = REGISTRY.register("stone_path_74", () -> new StonePath74Block());
	public static final RegistryObject<Block> BLACKSTONE_PATH_74 = REGISTRY.register("blackstone_path_74", () -> new BlackstonePath74Block());
	public static final RegistryObject<Block> DEEPSLATE_PATH_74 = REGISTRY.register("deepslate_path_74", () -> new DeepslatePath74Block());
	public static final RegistryObject<Block> ANDESITE_PATH_74 = REGISTRY.register("andesite_path_74", () -> new AndesitePath74Block());
	public static final RegistryObject<Block> DIORITE_PATH_74 = REGISTRY.register("diorite_path_74", () -> new DioritePath74Block());
	public static final RegistryObject<Block> GRANITE_PATH_74 = REGISTRY.register("granite_path_74", () -> new GranitePath74Block());
	public static final RegistryObject<Block> STONE_PATH_75 = REGISTRY.register("stone_path_75", () -> new StonePath75Block());
	public static final RegistryObject<Block> BLACKSTONE_PATH_75 = REGISTRY.register("blackstone_path_75", () -> new BlackstonePath75Block());
	public static final RegistryObject<Block> DEEPSLATE_PATH_75 = REGISTRY.register("deepslate_path_75", () -> new DeepslatePath75Block());
	public static final RegistryObject<Block> ANDESITE_PATH_75 = REGISTRY.register("andesite_path_75", () -> new AndesitePath75Block());
	public static final RegistryObject<Block> DIORITE_PATH_75 = REGISTRY.register("diorite_path_75", () -> new DioritePath75Block());
	public static final RegistryObject<Block> GRANITE_PATH_75 = REGISTRY.register("granite_path_75", () -> new GranitePath75Block());
	public static final RegistryObject<Block> STONE_PATH_8 = REGISTRY.register("stone_path_8", () -> new StonePath8Block());
	public static final RegistryObject<Block> BLACKSTONE_PATH_8 = REGISTRY.register("blackstone_path_8", () -> new BlackstonePath8Block());
	public static final RegistryObject<Block> DEEPSLATE_PATH_8 = REGISTRY.register("deepslate_path_8", () -> new DeepslatePath8Block());
	public static final RegistryObject<Block> ANDESITE_PATH_8 = REGISTRY.register("andesite_path_8", () -> new AndesitePath8Block());
	public static final RegistryObject<Block> DIORITE_PATH_8 = REGISTRY.register("diorite_path_8", () -> new DioritePath8Block());
	public static final RegistryObject<Block> GRANITE_PATH_8 = REGISTRY.register("granite_path_8", () -> new GranitePath8Block());
	public static final RegistryObject<Block> STONE_PATH_91 = REGISTRY.register("stone_path_91", () -> new StonePath91Block());
	public static final RegistryObject<Block> BLACKSTONE_PATH_91 = REGISTRY.register("blackstone_path_91", () -> new BlackstonePath91Block());
	public static final RegistryObject<Block> DEEPSLATE_PATH_91 = REGISTRY.register("deepslate_path_91", () -> new DeepslatePath91Block());
	public static final RegistryObject<Block> ANDESITE_PATH_91 = REGISTRY.register("andesite_path_91", () -> new AndesitePath91Block());
	public static final RegistryObject<Block> DIORITE_PATH_91 = REGISTRY.register("diorite_path_91", () -> new DioritePath91Block());
	public static final RegistryObject<Block> GRANITE_PATH_91 = REGISTRY.register("granite_path_91", () -> new GranitePath91Block());
	public static final RegistryObject<Block> STONE_PATH_92 = REGISTRY.register("stone_path_92", () -> new StonePath92Block());
	public static final RegistryObject<Block> BLACKSTONE_PATH_92 = REGISTRY.register("blackstone_path_92", () -> new BlackstonePath92Block());
	public static final RegistryObject<Block> DEEPSLATE_PATH_92 = REGISTRY.register("deepslate_path_92", () -> new DeepslatePath92Block());
	public static final RegistryObject<Block> DIORITE_PATH_92 = REGISTRY.register("diorite_path_92", () -> new DioritePath92Block());
	public static final RegistryObject<Block> ANDESITE_PATH_92 = REGISTRY.register("andesite_path_92", () -> new AndesitePath92Block());
	public static final RegistryObject<Block> GRANITE_PATH_92 = REGISTRY.register("granite_path_92", () -> new GranitePath92Block());
	public static final RegistryObject<Block> STONE_PATH_10 = REGISTRY.register("stone_path_10", () -> new StonePath10Block());
	public static final RegistryObject<Block> BLACKSTONE_PATH_10 = REGISTRY.register("blackstone_path_10", () -> new BlackstonePath10Block());
	public static final RegistryObject<Block> DEEPSLATE_PATH_10 = REGISTRY.register("deepslate_path_10", () -> new DeepslatePath10Block());
	public static final RegistryObject<Block> ANDESITE_PATH_10 = REGISTRY.register("andesite_path_10", () -> new AndesitePath10Block());
	public static final RegistryObject<Block> DIORITE_PATH_10 = REGISTRY.register("diorite_path_10", () -> new DioritePath10Block());
	public static final RegistryObject<Block> GRANITE_PATH_10 = REGISTRY.register("granite_path_10", () -> new GranitePath10Block());
	public static final RegistryObject<Block> STONE_PATH_11 = REGISTRY.register("stone_path_11", () -> new StonePath11Block());
	public static final RegistryObject<Block> BLACKSTONE_PATH_11 = REGISTRY.register("blackstone_path_11", () -> new BlackstonePath11Block());
	public static final RegistryObject<Block> DEEPSLATE_PATH_11 = REGISTRY.register("deepslate_path_11", () -> new DeepslatePath11Block());
	public static final RegistryObject<Block> ANDESITE_PATH_11 = REGISTRY.register("andesite_path_11", () -> new AndesitePath11Block());
	public static final RegistryObject<Block> DIORITE_PATH_11 = REGISTRY.register("diorite_path_11", () -> new DioritePath11Block());
	public static final RegistryObject<Block> GRANITE_PATH_11 = REGISTRY.register("granite_path_11", () -> new GranitePath11Block());
	public static final RegistryObject<Block> STONE_PATH_12 = REGISTRY.register("stone_path_12", () -> new StonePath12Block());
	public static final RegistryObject<Block> BLACKSTONE_PATH_12 = REGISTRY.register("blackstone_path_12", () -> new BlackstonePath12Block());
	public static final RegistryObject<Block> DEEPSLATE_PATH_12 = REGISTRY.register("deepslate_path_12", () -> new DeepslatePath12Block());
	public static final RegistryObject<Block> ANDESITE_PATH_12 = REGISTRY.register("andesite_path_12", () -> new AndesitePath12Block());
	public static final RegistryObject<Block> DIORITE_PATH_12 = REGISTRY.register("diorite_path_12", () -> new DioritePath12Block());
	public static final RegistryObject<Block> GRANITE_PATH_12 = REGISTRY.register("granite_path_12", () -> new GranitePath12Block());
	public static final RegistryObject<Block> STONE_PATH_131 = REGISTRY.register("stone_path_131", () -> new StonePath131Block());
	public static final RegistryObject<Block> BLACKSTONE_PATH_131 = REGISTRY.register("blackstone_path_131", () -> new BlackstonePath131Block());
	public static final RegistryObject<Block> DEEPSLATE_PATH_131 = REGISTRY.register("deepslate_path_131", () -> new DeepslatePath131Block());
	public static final RegistryObject<Block> ANDESITE_PATH_131 = REGISTRY.register("andesite_path_131", () -> new AndesitePath131Block());
	public static final RegistryObject<Block> DIORITE_PATH_131 = REGISTRY.register("diorite_path_131", () -> new DioritePath131Block());
	public static final RegistryObject<Block> GRANITE_PATH_131 = REGISTRY.register("granite_path_131", () -> new GranitePath131Block());
	public static final RegistryObject<Block> STONE_PATH_132 = REGISTRY.register("stone_path_132", () -> new StonePath132Block());
	public static final RegistryObject<Block> BLACKSTONE_PATH_132 = REGISTRY.register("blackstone_path_132", () -> new BlackstonePath132Block());
	public static final RegistryObject<Block> DEEPSLATE_PATH_132 = REGISTRY.register("deepslate_path_132", () -> new DeepslatePath132Block());
	public static final RegistryObject<Block> ANDESITE_PATH_132 = REGISTRY.register("andesite_path_132", () -> new AndesitePath132Block());
	public static final RegistryObject<Block> DIORITE_PATH_132 = REGISTRY.register("diorite_path_132", () -> new DioritePath132Block());
	public static final RegistryObject<Block> GRANITE_PATH_132 = REGISTRY.register("granite_path_132", () -> new GranitePath132Block());
	public static final RegistryObject<Block> STONE_PATH_133 = REGISTRY.register("stone_path_133", () -> new StonePath133Block());
	public static final RegistryObject<Block> BLACKSTONE_PATH_133 = REGISTRY.register("blackstone_path_133", () -> new BlackstonePath133Block());
	public static final RegistryObject<Block> DEEPSLATE_PATH_133 = REGISTRY.register("deepslate_path_133", () -> new DeepslatePath133Block());
	public static final RegistryObject<Block> ANDESITE_PATH_133 = REGISTRY.register("andesite_path_133", () -> new AndesitePath133Block());
	public static final RegistryObject<Block> DIORITE_PATH_133 = REGISTRY.register("diorite_path_133", () -> new DioritePath133Block());
	public static final RegistryObject<Block> GRANITE_PATH_133 = REGISTRY.register("granite_path_133", () -> new GranitePath133Block());
	public static final RegistryObject<Block> OAK_PLANK_PATH_8 = REGISTRY.register("oak_plank_path_8", () -> new OakPlankPath8Block());
	public static final RegistryObject<Block> OAK_BIG_BRICKS = REGISTRY.register("oak_big_bricks", () -> new OakBigBricksBlock());
	public static final RegistryObject<Block> CONNECTING_OAK_BIG_BRICKS = REGISTRY.register("connecting_oak_big_bricks", () -> new ConnectingOakBigBricksBlock());
	public static final RegistryObject<Block> FRAMED_OAK_BIG_BRICKS = REGISTRY.register("framed_oak_big_bricks", () -> new FramedOakBigBricksBlock());
	public static final RegistryObject<Block> OAK_SMALL_BRICKS = REGISTRY.register("oak_small_bricks", () -> new OakSmallBricksBlock());
	public static final RegistryObject<Block> CONNECTING_OAK_SMALL_BRICKS = REGISTRY.register("connecting_oak_small_bricks", () -> new ConnectingOakSmallBricksBlock());
	public static final RegistryObject<Block> FRAMED_OAK_SMALL_BRICKS = REGISTRY.register("framed_oak_small_bricks", () -> new FramedOakSmallBricksBlock());
	public static final RegistryObject<Block> OAK_HORIZONTAL_STRIPES = REGISTRY.register("oak_horizontal_stripes", () -> new OakHorizontalStripesBlock());
	public static final RegistryObject<Block> CONNECTING_OAK_HORIZONTAL_STRIPES = REGISTRY.register("connecting_oak_horizontal_stripes", () -> new ConnectingOakHorizontalStripesBlock());
	public static final RegistryObject<Block> FRAMED_OAK_HORIZONTAL_STRIPES = REGISTRY.register("framed_oak_horizontal_stripes", () -> new FramedOakHorizontalStripesBlock());
	public static final RegistryObject<Block> OAK_VERTICAL_STRIPES = REGISTRY.register("oak_vertical_stripes", () -> new OakVerticalStripesBlock());
	public static final RegistryObject<Block> CONNECTING_OAK_VERTICAL_STRIPES = REGISTRY.register("connecting_oak_vertical_stripes", () -> new ConnectingOakVerticalStripesBlock());
	public static final RegistryObject<Block> FRAMED_OAK_VERTICAL_STRIPES = REGISTRY.register("framed_oak_vertical_stripes", () -> new FramedOakVerticalStripesBlock());
	public static final RegistryObject<Block> OAK_DIAGONAL = REGISTRY.register("oak_diagonal", () -> new OakDiagonalBlock());
	public static final RegistryObject<Block> CONNECTING_OAK_DIAGONAL = REGISTRY.register("connecting_oak_diagonal", () -> new ConnectingOakDiagonalBlock());
	public static final RegistryObject<Block> FRAMED_OAK_DIAGONAL = REGISTRY.register("framed_oak_diagonal", () -> new FramedOakDiagonalBlock());
	public static final RegistryObject<Block> OAK_CHECKERED = REGISTRY.register("oak_checkered", () -> new OakCheckeredBlock());
	public static final RegistryObject<Block> CONNECTING_OAK_CHECKERED = REGISTRY.register("connecting_oak_checkered", () -> new ConnectingOakCheckeredBlock());
	public static final RegistryObject<Block> FRAMED_OAK_CHECKERED = REGISTRY.register("framed_oak_checkered", () -> new FramedOakCheckeredBlock());
	public static final RegistryObject<Block> OAK_CHECKED = REGISTRY.register("oak_checked", () -> new OakCheckedBlock());
	public static final RegistryObject<Block> CONNECTING_OAK_CHECKED = REGISTRY.register("connecting_oak_checked", () -> new ConnectingOakCheckedBlock());
	public static final RegistryObject<Block> FRAMED_OAK_CHECKED = REGISTRY.register("framed_oak_checked", () -> new FramedOakCheckedBlock());
	public static final RegistryObject<Block> OAK_DUNES = REGISTRY.register("oak_dunes", () -> new OakDunesBlock());
	public static final RegistryObject<Block> CONNECTING_OAK_DUNES = REGISTRY.register("connecting_oak_dunes", () -> new ConnectingOakDunesBlock());
	public static final RegistryObject<Block> FRAMED_OAK_DUNES = REGISTRY.register("framed_oak_dunes", () -> new FramedOakDunesBlock());
	public static final RegistryObject<Block> OAK_MOSAIC = REGISTRY.register("oak_mosaic", () -> new OakMosaicBlock());
	public static final RegistryObject<Block> CONNECTING_OAK_MOSAIC = REGISTRY.register("connecting_oak_mosaic", () -> new ConnectingOakMosaicBlock());
	public static final RegistryObject<Block> FRAMED_OAK_MOSAIC = REGISTRY.register("framed_oak_mosaic", () -> new FramedOakMosaicBlock());
	public static final RegistryObject<Block> OAK_WAVEY = REGISTRY.register("oak_wavey", () -> new OakWaveyBlock());
	public static final RegistryObject<Block> CONNECTING_OAK_WAVEY = REGISTRY.register("connecting_oak_wavey", () -> new ConnectingOakWaveyBlock());
	public static final RegistryObject<Block> FRAMED_OAK_WAVEY = REGISTRY.register("framed_oak_wavey", () -> new FramedOakWaveyBlock());
	public static final RegistryObject<Block> OAK_SWIRL = REGISTRY.register("oak_swirl", () -> new OakSwirlBlock());
	public static final RegistryObject<Block> CONNECTING_OAK_SWIRL = REGISTRY.register("connecting_oak_swirl", () -> new ConnectingOakSwirlBlock());
	public static final RegistryObject<Block> FRAMED_OAK_SWIRL = REGISTRY.register("framed_oak_swirl", () -> new FramedOakSwirlBlock());
	public static final RegistryObject<Block> OAK_SLASH = REGISTRY.register("oak_slash", () -> new OakSlashBlock());
	public static final RegistryObject<Block> CONNECTING_OAK_SLASH = REGISTRY.register("connecting_oak_slash", () -> new ConnectingOakSlashBlock());
	public static final RegistryObject<Block> FRAMED_OAK_SLASH = REGISTRY.register("framed_oak_slash", () -> new FramedOakSlashBlock());
	public static final RegistryObject<Block> OAK_PLUS = REGISTRY.register("oak_plus", () -> new OakPlusBlock());
	public static final RegistryObject<Block> CONNECTING_OAK_PLUS = REGISTRY.register("connecting_oak_plus", () -> new ConnectingOakPlusBlock());
	public static final RegistryObject<Block> FRAMED_OAK_PLUS = REGISTRY.register("framed_oak_plus", () -> new FramedOakPlusBlock());
	public static final RegistryObject<Block> TABLE_STRAIGHT = REGISTRY.register("table_straight", () -> new TableStraightBlock());
	public static final RegistryObject<Block> TABLE_CORNER = REGISTRY.register("table_corner", () -> new TableCornerBlock());
	public static final RegistryObject<Block> TABLE_JUNCTION = REGISTRY.register("table_junction", () -> new TableJunctionBlock());
	public static final RegistryObject<Block> TABLE_CROSS = REGISTRY.register("table_cross", () -> new TableCrossBlock());
	public static final RegistryObject<Block> TABLE_END = REGISTRY.register("table_end", () -> new TableEndBlock());
	public static final RegistryObject<Block> DARK_OAK_TABLE_STRAIGHT = REGISTRY.register("dark_oak_table_straight", () -> new DarkOakTableStraightBlock());
	public static final RegistryObject<Block> DARK_OAK_TABLE_CORNER = REGISTRY.register("dark_oak_table_corner", () -> new DarkOakTableCornerBlock());
	public static final RegistryObject<Block> DARK_OAK_TABLE_JUNCTION = REGISTRY.register("dark_oak_table_junction", () -> new DarkOakTableJunctionBlock());
	public static final RegistryObject<Block> DARK_OAK_TABLE_CROSS = REGISTRY.register("dark_oak_table_cross", () -> new DarkOakTableCrossBlock());
	public static final RegistryObject<Block> DARK_OAK_TABLE_END = REGISTRY.register("dark_oak_table_end", () -> new DarkOakTableEndBlock());
	public static final RegistryObject<Block> OAK_YELLOW_RIGHT_END = REGISTRY.register("oak_yellow_right_end", () -> new OakYellowRightEndBlock());
	public static final RegistryObject<Block> OAK_YELLOW_LEFT_END = REGISTRY.register("oak_yellow_left_end", () -> new OakYellowLeftEndBlock());
	public static final RegistryObject<Block> OAK_YELLOW_STRAIGHT = REGISTRY.register("oak_yellow_straight", () -> new OakYellowStraightBlock());
	public static final RegistryObject<Block> OAK_YELLOW_CORNER = REGISTRY.register("oak_yellow_corner", () -> new OakYellowCornerBlock());
	public static final RegistryObject<Block> OAK_YELLOW_OUTER = REGISTRY.register("oak_yellow_outer", () -> new OakYellowOuterBlock());
	public static final RegistryObject<Block> ANY_WOOL = REGISTRY.register("any_wool", () -> new AnyWoolBlock());
	public static final RegistryObject<Block> ANY_WOOD = REGISTRY.register("any_wood", () -> new AnyWoodBlock());
	public static final RegistryObject<Block> FRIDGE_FREEZER_BLOCK_1 = REGISTRY.register("fridge_freezer_block_1", () -> new FridgeFreezerBlock1Block());
	public static final RegistryObject<Block> FRIDGE_FREEZER_BLOCK_2 = REGISTRY.register("fridge_freezer_block_2", () -> new FridgeFreezerBlock2Block());
	public static final RegistryObject<Block> APPLE_PLATE = REGISTRY.register("apple_plate", () -> new ApplePlateBlock());
	public static final RegistryObject<Block> ANY_PLANKS = REGISTRY.register("any_planks", () -> new AnyPlanksBlock());
	public static final RegistryObject<Block> COMPUTER_ON = REGISTRY.register("computer_on", () -> new ComputerOnBlock());
	public static final RegistryObject<Block> COMPUTER_MINECRAFT = REGISTRY.register("computer_minecraft", () -> new ComputerMinecraftBlock());
	public static final RegistryObject<Block> COMPUTER_COD = REGISTRY.register("computer_cod", () -> new ComputerCODBlock());
	public static final RegistryObject<Block> DRAINER_PLATE = REGISTRY.register("drainer_plate", () -> new DrainerPlateBlock());
	public static final RegistryObject<Block> DRANIER_1_PLATE = REGISTRY.register("dranier_1_plate", () -> new Dranier1PlateBlock());
	public static final RegistryObject<Block> DRAINER_2_PLATES = REGISTRY.register("drainer_2_plates", () -> new Drainer2PlatesBlock());
	public static final RegistryObject<Block> OAK_WARDROBE_1 = REGISTRY.register("oak_wardrobe_1", () -> new OakWardrobe1Block());
	public static final RegistryObject<Block> OAK_WARDROBE_2 = REGISTRY.register("oak_wardrobe_2", () -> new OakWardrobe2Block());
	public static final RegistryObject<Block> DARKOAKWARDROBE_1 = REGISTRY.register("darkoakwardrobe_1", () -> new Darkoakwardrobe1Block());
	public static final RegistryObject<Block> DARKOAKWARDROBE_2 = REGISTRY.register("darkoakwardrobe_2", () -> new Darkoakwardrobe2Block());
	public static final RegistryObject<Block> SPRUCE_WARDROBE_1 = REGISTRY.register("spruce_wardrobe_1", () -> new SpruceWardrobe1Block());
	public static final RegistryObject<Block> SPRUCE_WARDROBE_2 = REGISTRY.register("spruce_wardrobe_2", () -> new SpruceWardrobe2Block());
	public static final RegistryObject<Block> ACACIA_WARDROBE_1 = REGISTRY.register("acacia_wardrobe_1", () -> new AcaciaWardrobe1Block());
	public static final RegistryObject<Block> ACACIA_WARDROBE_2 = REGISTRY.register("acacia_wardrobe_2", () -> new AcaciaWardrobe2Block());
	public static final RegistryObject<Block> BIRCH_WARDROBE_1 = REGISTRY.register("birch_wardrobe_1", () -> new BirchWardrobe1Block());
	public static final RegistryObject<Block> BIRCH_WARDROBE_2 = REGISTRY.register("birch_wardrobe_2", () -> new BirchWardrobe2Block());
	public static final RegistryObject<Block> JUNGLE_WARDROBE_1 = REGISTRY.register("jungle_wardrobe_1", () -> new JungleWardrobe1Block());
	public static final RegistryObject<Block> JUNGLE_WARDROBE_2 = REGISTRY.register("jungle_wardrobe_2", () -> new JungleWardrobe2Block());
	public static final RegistryObject<Block> MANGROVE_WARDROBE_1 = REGISTRY.register("mangrove_wardrobe_1", () -> new MangroveWardrobe1Block());
	public static final RegistryObject<Block> MANGROVE_WARDROBE_2 = REGISTRY.register("mangrove_wardrobe_2", () -> new MangroveWardrobe2Block());
	public static final RegistryObject<Block> CRIMSON_WARDROBE_1 = REGISTRY.register("crimson_wardrobe_1", () -> new CrimsonWardrobe1Block());
	public static final RegistryObject<Block> CRIMSON_WARDROBE_2 = REGISTRY.register("crimson_wardrobe_2", () -> new CrimsonWardrobe2Block());
	public static final RegistryObject<Block> WARPED_WARDROBE_1 = REGISTRY.register("warped_wardrobe_1", () -> new WarpedWardrobe1Block());
	public static final RegistryObject<Block> WARPED_WARDROBE_2 = REGISTRY.register("warped_wardrobe_2", () -> new WarpedWardrobe2Block());
	public static final RegistryObject<Block> OAK_WHITE_RIGHT_END = REGISTRY.register("oak_white_right_end", () -> new OakWhiteRightEndBlock());
	public static final RegistryObject<Block> OAK_WHITE_LEFT_END = REGISTRY.register("oak_white_left_end", () -> new OakWhiteLeftEndBlock());
	public static final RegistryObject<Block> OAK_WHITE_STRAIGHT = REGISTRY.register("oak_white_straight", () -> new OakWhiteStraightBlock());
	public static final RegistryObject<Block> OAK_WHITE_CORNER = REGISTRY.register("oak_white_corner", () -> new OakWhiteCornerBlock());
	public static final RegistryObject<Block> IRON_STRAIGHT = REGISTRY.register("iron_straight", () -> new IronStraightBlock());
	public static final RegistryObject<Block> IRON_JUNCTION = REGISTRY.register("iron_junction", () -> new IronJunctionBlock());
	public static final RegistryObject<Block> IRON_CORNER = REGISTRY.register("iron_corner", () -> new IronCornerBlock());
	public static final RegistryObject<Block> IRON_END = REGISTRY.register("iron_end", () -> new IronEndBlock());
	public static final RegistryObject<Block> IRON_CROSS = REGISTRY.register("iron_cross", () -> new IronCrossBlock());
	public static final RegistryObject<Block> OVEN_VENT_ON = REGISTRY.register("oven_vent_on", () -> new OvenVentOnBlock());
	public static final RegistryObject<Block> OAK_CUPBOARD_VENT_ON = REGISTRY.register("oak_cupboard_vent_on", () -> new OakCupboardVentOnBlock());
	public static final RegistryObject<Block> OAK_CUPBOARD_CORNER = REGISTRY.register("oak_cupboard_corner", () -> new OakCupboardCornerBlock());
	public static final RegistryObject<Block> OAK_COUNTER_CORNER = REGISTRY.register("oak_counter_corner", () -> new OakCounterCornerBlock());
	public static final RegistryObject<Block> DARK_OAK_COUNTER_CORNER = REGISTRY.register("dark_oak_counter_corner", () -> new DarkOakCounterCornerBlock());
	public static final RegistryObject<Block> SPRUCE_COUNTER_CORNER = REGISTRY.register("spruce_counter_corner", () -> new SpruceCounterCornerBlock());
	public static final RegistryObject<Block> ACACIA_COUNTER_CORNER = REGISTRY.register("acacia_counter_corner", () -> new AcaciaCounterCornerBlock());
	public static final RegistryObject<Block> BIRCH_COUNTER_CORNER = REGISTRY.register("birch_counter_corner", () -> new BirchCounterCornerBlock());
	public static final RegistryObject<Block> JUNGLE_COUNTER_CORNER = REGISTRY.register("jungle_counter_corner", () -> new JungleCounterCornerBlock());
	public static final RegistryObject<Block> MANGROVE_COUNTER_CORNER = REGISTRY.register("mangrove_counter_corner", () -> new MangroveCounterCornerBlock());
	public static final RegistryObject<Block> CRIMSON_COUNTER_CORNER = REGISTRY.register("crimson_counter_corner", () -> new CrimsonCounterCornerBlock());
	public static final RegistryObject<Block> WARPED_COUNTER_CORNER = REGISTRY.register("warped_counter_corner", () -> new WarpedCounterCornerBlock());
	public static final RegistryObject<Block> DARK_OAK_CUPBOARD_VENT_ON = REGISTRY.register("dark_oak_cupboard_vent_on", () -> new DarkOakCupboardVentOnBlock());
	public static final RegistryObject<Block> SPRUCE_CUPBOARD_VENT_ON = REGISTRY.register("spruce_cupboard_vent_on", () -> new SpruceCupboardVentOnBlock());
	public static final RegistryObject<Block> ACACIA_CUPBOARD_VENT_ON = REGISTRY.register("acacia_cupboard_vent_on", () -> new AcaciaCupboardVentOnBlock());
	public static final RegistryObject<Block> BIRCH_CUPBOARD_VENT_ON = REGISTRY.register("birch_cupboard_vent_on", () -> new BirchCupboardVentOnBlock());
	public static final RegistryObject<Block> JUNGLE_CUPBOARD_VENT_ON = REGISTRY.register("jungle_cupboard_vent_on", () -> new JungleCupboardVentOnBlock());
	public static final RegistryObject<Block> MANGROVE_CUPBOARD_VENT_ON = REGISTRY.register("mangrove_cupboard_vent_on", () -> new MangroveCupboardVentOnBlock());
	public static final RegistryObject<Block> CRIMSON_CUPBOARD_VENT_ON = REGISTRY.register("crimson_cupboard_vent_on", () -> new CrimsonCupboardVentOnBlock());
	public static final RegistryObject<Block> WARPED_CUPBOARD_VENT_ON = REGISTRY.register("warped_cupboard_vent_on", () -> new WarpedCupboardVentOnBlock());
	public static final RegistryObject<Block> DARK_OAK_CUPBOARD_CORNER = REGISTRY.register("dark_oak_cupboard_corner", () -> new DarkOakCupboardCornerBlock());
	public static final RegistryObject<Block> ACACIA_CUPBOARD_CORNER = REGISTRY.register("acacia_cupboard_corner", () -> new AcaciaCupboardCornerBlock());
	public static final RegistryObject<Block> SPRUCE_CUPBOARD_CORNER = REGISTRY.register("spruce_cupboard_corner", () -> new SpruceCupboardCornerBlock());
	public static final RegistryObject<Block> BIRCH_CUPBOARD_CORNER = REGISTRY.register("birch_cupboard_corner", () -> new BirchCupboardCornerBlock());
	public static final RegistryObject<Block> JUNGLE_CUPBOARD_CORNER = REGISTRY.register("jungle_cupboard_corner", () -> new JungleCupboardCornerBlock());
	public static final RegistryObject<Block> MANGROVE_CUPBOARD_CORNER = REGISTRY.register("mangrove_cupboard_corner", () -> new MangroveCupboardCornerBlock());
	public static final RegistryObject<Block> CRIMSON_CUPBOARD_CORNER = REGISTRY.register("crimson_cupboard_corner", () -> new CrimsonCupboardCornerBlock());
	public static final RegistryObject<Block> WARPED_CUPBOARD_CORNER = REGISTRY.register("warped_cupboard_corner", () -> new WarpedCupboardCornerBlock());
	public static final RegistryObject<Block> ANY_STONE = REGISTRY.register("any_stone", () -> new AnyStoneBlock());
	public static final RegistryObject<Block> ANY_STONE_PLANK = REGISTRY.register("any_stone_plank", () -> new AnyStonePlankBlock());
	public static final RegistryObject<Block> DARK_OAK_WHITE_RIGHT_END = REGISTRY.register("dark_oak_white_right_end", () -> new DarkOakWhiteRightEndBlock());
	public static final RegistryObject<Block> DARK_OAK_WHITE_LEFT_END = REGISTRY.register("dark_oak_white_left_end", () -> new DarkOakWhiteLeftEndBlock());
	public static final RegistryObject<Block> DARK_OAK_WHITE_STRAIGHT = REGISTRY.register("dark_oak_white_straight", () -> new DarkOakWhiteStraightBlock());
	public static final RegistryObject<Block> DARK_OAK_WHITE_CORNER = REGISTRY.register("dark_oak_white_corner", () -> new DarkOakWhiteCornerBlock());
	public static final RegistryObject<Block> SPRUCE_WHITE_RIGHT_END = REGISTRY.register("spruce_white_right_end", () -> new SpruceWhiteRightEndBlock());
	public static final RegistryObject<Block> SPRUCE_WHITE_LEFT_END = REGISTRY.register("spruce_white_left_end", () -> new SpruceWhiteLeftEndBlock());
	public static final RegistryObject<Block> SPRUCE_WHITE_STRAIGHT = REGISTRY.register("spruce_white_straight", () -> new SpruceWhiteStraightBlock());
	public static final RegistryObject<Block> SPRUCE_WHITE_CORNER = REGISTRY.register("spruce_white_corner", () -> new SpruceWhiteCornerBlock());
	public static final RegistryObject<Block> ACACIA_WHITE_RIGHT_END = REGISTRY.register("acacia_white_right_end", () -> new AcaciaWhiteRightEndBlock());
	public static final RegistryObject<Block> ACACIA_WHITE_LEFT_END = REGISTRY.register("acacia_white_left_end", () -> new AcaciaWhiteLeftEndBlock());
	public static final RegistryObject<Block> ACACIA_WHITE_STARIGHT = REGISTRY.register("acacia_white_staright", () -> new AcaciaWhiteStarightBlock());
	public static final RegistryObject<Block> ACACIA_WHITE_CORNER = REGISTRY.register("acacia_white_corner", () -> new AcaciaWhiteCornerBlock());
	public static final RegistryObject<Block> BIRCH_WHITE_RIGHT_END = REGISTRY.register("birch_white_right_end", () -> new BirchWhiteRightEndBlock());
	public static final RegistryObject<Block> BIRCH_WHITE_LEFT_END = REGISTRY.register("birch_white_left_end", () -> new BirchWhiteLeftEndBlock());
	public static final RegistryObject<Block> BIRCH_WHITE_STARIGHT = REGISTRY.register("birch_white_staright", () -> new BirchWhiteStarightBlock());
	public static final RegistryObject<Block> BIRCH_WHITE_CORNER = REGISTRY.register("birch_white_corner", () -> new BirchWhiteCornerBlock());
	public static final RegistryObject<Block> JUNGLE_WHITE_RIGHT_END = REGISTRY.register("jungle_white_right_end", () -> new JungleWhiteRightEndBlock());
	public static final RegistryObject<Block> JUNGLE_WHITE_LEFT_END = REGISTRY.register("jungle_white_left_end", () -> new JungleWhiteLeftEndBlock());
	public static final RegistryObject<Block> JUNGLE_WHITE_STRAIGHT = REGISTRY.register("jungle_white_straight", () -> new JungleWhiteStraightBlock());
	public static final RegistryObject<Block> JUNGLE_WHITE_CORNER = REGISTRY.register("jungle_white_corner", () -> new JungleWhiteCornerBlock());
	public static final RegistryObject<Block> MANGROVE_WHITE_RIGHT_END = REGISTRY.register("mangrove_white_right_end", () -> new MangroveWhiteRightEndBlock());
	public static final RegistryObject<Block> MANGROVE_WHITE_LEFT_END = REGISTRY.register("mangrove_white_left_end", () -> new MangroveWhiteLeftEndBlock());
	public static final RegistryObject<Block> MANGROVE_WHITE_STRAIGHT = REGISTRY.register("mangrove_white_straight", () -> new MangroveWhiteStraightBlock());
	public static final RegistryObject<Block> MANGROVE_WHITE_CORNER = REGISTRY.register("mangrove_white_corner", () -> new MangroveWhiteCornerBlock());
	public static final RegistryObject<Block> CRIMSON_WHITE_RIGHT_END = REGISTRY.register("crimson_white_right_end", () -> new CrimsonWhiteRightEndBlock());
	public static final RegistryObject<Block> CRIMSON_WHITE_LEFT_END = REGISTRY.register("crimson_white_left_end", () -> new CrimsonWhiteLeftEndBlock());
	public static final RegistryObject<Block> CRIMSON_WHITE_STRAIGHT = REGISTRY.register("crimson_white_straight", () -> new CrimsonWhiteStraightBlock());
	public static final RegistryObject<Block> CRIMSON_WHITE_CORNER = REGISTRY.register("crimson_white_corner", () -> new CrimsonWhiteCornerBlock());
	public static final RegistryObject<Block> WARPED_WHITE_RIGHT_END = REGISTRY.register("warped_white_right_end", () -> new WarpedWhiteRightEndBlock());
	public static final RegistryObject<Block> WARPED_WHITE_LEFT_END = REGISTRY.register("warped_white_left_end", () -> new WarpedWhiteLeftEndBlock());
	public static final RegistryObject<Block> WARPED_WHITE_STRAIGHT = REGISTRY.register("warped_white_straight", () -> new WarpedWhiteStraightBlock());
	public static final RegistryObject<Block> WARPED_WHITE_CORNER = REGISTRY.register("warped_white_corner", () -> new WarpedWhiteCornerBlock());
	public static final RegistryObject<Block> SPRUCE_TABLE_STRAIGHT = REGISTRY.register("spruce_table_straight", () -> new SpruceTableStraightBlock());
	public static final RegistryObject<Block> SPRUCE_TABLE_CORNER = REGISTRY.register("spruce_table_corner", () -> new SpruceTableCornerBlock());
	public static final RegistryObject<Block> SPRUCE_TABLE_JUNCTION = REGISTRY.register("spruce_table_junction", () -> new SpruceTableJunctionBlock());
	public static final RegistryObject<Block> SPRUCE_TABLE_CROSS = REGISTRY.register("spruce_table_cross", () -> new SpruceTableCrossBlock());
	public static final RegistryObject<Block> SPRUCE_TABLE_END = REGISTRY.register("spruce_table_end", () -> new SpruceTableEndBlock());
	public static final RegistryObject<Block> ACACIA_TABLE_STRAIGHT = REGISTRY.register("acacia_table_straight", () -> new AcaciaTableStraightBlock());
	public static final RegistryObject<Block> ACACIA_TABLE_CORNER = REGISTRY.register("acacia_table_corner", () -> new AcaciaTableCornerBlock());
	public static final RegistryObject<Block> ACACIA_TABLE_JUNCTION = REGISTRY.register("acacia_table_junction", () -> new AcaciaTableJunctionBlock());
	public static final RegistryObject<Block> ACACIA_TABLE_CROSS = REGISTRY.register("acacia_table_cross", () -> new AcaciaTableCrossBlock());
	public static final RegistryObject<Block> ACACIA_TABLE_END = REGISTRY.register("acacia_table_end", () -> new AcaciaTableEndBlock());
	public static final RegistryObject<Block> BIRCH_TABLE_STRAIGHT = REGISTRY.register("birch_table_straight", () -> new BirchTableStraightBlock());
	public static final RegistryObject<Block> BIRCH_TABLE_CORNER = REGISTRY.register("birch_table_corner", () -> new BirchTableCornerBlock());
	public static final RegistryObject<Block> BIRCH_TABLE_JUNCTION = REGISTRY.register("birch_table_junction", () -> new BirchTableJunctionBlock());
	public static final RegistryObject<Block> BIRCH_TABLE_CROSS = REGISTRY.register("birch_table_cross", () -> new BirchTableCrossBlock());
	public static final RegistryObject<Block> BIRCH_TABLE_END = REGISTRY.register("birch_table_end", () -> new BirchTableEndBlock());
	public static final RegistryObject<Block> JUNGLE_TABLE_STRAIGHT = REGISTRY.register("jungle_table_straight", () -> new JungleTableStraightBlock());
	public static final RegistryObject<Block> JUNGLE_TABLE_CORNER = REGISTRY.register("jungle_table_corner", () -> new JungleTableCornerBlock());
	public static final RegistryObject<Block> JUNGLE_TABLE_JUNCTION = REGISTRY.register("jungle_table_junction", () -> new JungleTableJunctionBlock());
	public static final RegistryObject<Block> JUNGLE_TABLE_CROSS = REGISTRY.register("jungle_table_cross", () -> new JungleTableCrossBlock());
	public static final RegistryObject<Block> JUNGLE_TABLE_END = REGISTRY.register("jungle_table_end", () -> new JungleTableEndBlock());
	public static final RegistryObject<Block> MANGROVE_TABLE_STRAIGHT = REGISTRY.register("mangrove_table_straight", () -> new MangroveTableStraightBlock());
	public static final RegistryObject<Block> MANGROVE_TABLE_CORNER = REGISTRY.register("mangrove_table_corner", () -> new MangroveTableCornerBlock());
	public static final RegistryObject<Block> MANGROVE_TABLE_JUNCTION = REGISTRY.register("mangrove_table_junction", () -> new MangroveTableJunctionBlock());
	public static final RegistryObject<Block> MANGROVE_TABLE_CROSS = REGISTRY.register("mangrove_table_cross", () -> new MangroveTableCrossBlock());
	public static final RegistryObject<Block> MANGROVE_TABLE_END = REGISTRY.register("mangrove_table_end", () -> new MangroveTableEndBlock());
	public static final RegistryObject<Block> CRIMSON_TABLE_STRAIGHT = REGISTRY.register("crimson_table_straight", () -> new CrimsonTableStraightBlock());
	public static final RegistryObject<Block> CRIMSON_TABLE_CORNER = REGISTRY.register("crimson_table_corner", () -> new CrimsonTableCornerBlock());
	public static final RegistryObject<Block> CRIMSON_TABLE_JUNCTION = REGISTRY.register("crimson_table_junction", () -> new CrimsonTableJunctionBlock());
	public static final RegistryObject<Block> CRIMSON_TABLE_CROSS = REGISTRY.register("crimson_table_cross", () -> new CrimsonTableCrossBlock());
	public static final RegistryObject<Block> CRIMSON_TABLE_END = REGISTRY.register("crimson_table_end", () -> new CrimsonTableEndBlock());
	public static final RegistryObject<Block> WARPED_TABLE_STRAIGHT = REGISTRY.register("warped_table_straight", () -> new WarpedTableStraightBlock());
	public static final RegistryObject<Block> WARPED_TABLE_CORNER = REGISTRY.register("warped_table_corner", () -> new WarpedTableCornerBlock());
	public static final RegistryObject<Block> WARPED_TABLE_JUNCTION = REGISTRY.register("warped_table_junction", () -> new WarpedTableJunctionBlock());
	public static final RegistryObject<Block> WARPED_TABLE_CROSS = REGISTRY.register("warped_table_cross", () -> new WarpedTableCrossBlock());
	public static final RegistryObject<Block> WARPED_TABLE_END = REGISTRY.register("warped_table_end", () -> new WarpedTableEndBlock());
	public static final RegistryObject<Block> OAK_BLINDS_BOTTOM = REGISTRY.register("oak_blinds_bottom", () -> new OakBlindsBottomBlock());
	public static final RegistryObject<Block> OAK_BLINDS_TOP_CLOSED = REGISTRY.register("oak_blinds_top_closed", () -> new OakBlindsTopClosedBlock());
	public static final RegistryObject<Block> OAK_BLINDS_BOTTOM_CLOSED = REGISTRY.register("oak_blinds_bottom_closed", () -> new OakBlindsBottomClosedBlock());
	public static final RegistryObject<Block> TV_STAND_ON = REGISTRY.register("tv_stand_on", () -> new TVStandOnBlock());
	public static final RegistryObject<Block> TV_STAND_MINECRAFT = REGISTRY.register("tv_stand_minecraft", () -> new TVStandMinecraftBlock());
	public static final RegistryObject<Block> TV_STAND_COD = REGISTRY.register("tv_stand_cod", () -> new TVStandCodBlock());
	public static final RegistryObject<Block> TV_WALL_OFF = REGISTRY.register("tv_wall_off", () -> new TVWallOffBlock());
	public static final RegistryObject<Block> TV_WALL_ON = REGISTRY.register("tv_wall_on", () -> new TVWallOnBlock());
	public static final RegistryObject<Block> TV_WALL_MINECRAFT = REGISTRY.register("tv_wall_minecraft", () -> new TVWallMinecraftBlock());
	public static final RegistryObject<Block> TV_WALL_COD = REGISTRY.register("tv_wall_cod", () -> new TVWallCodBlock());
	public static final RegistryObject<Block> DARK_OAK_BLINDS_BOTTOM = REGISTRY.register("dark_oak_blinds_bottom", () -> new DarkOakBlindsBottomBlock());
	public static final RegistryObject<Block> DARK_OAK_BLINDS_TOP_CLOSED = REGISTRY.register("dark_oak_blinds_top_closed", () -> new DarkOakBlindsTopClosedBlock());
	public static final RegistryObject<Block> DARK_OAK_BLINDS_BOTTOM_CLOSED = REGISTRY.register("dark_oak_blinds_bottom_closed", () -> new DarkOakBlindsBottomClosedBlock());
	public static final RegistryObject<Block> CONNECTING_DARK_OAK_BIG_BRICKS = REGISTRY.register("connecting_dark_oak_big_bricks", () -> new ConnectingDarkOakBigBricksBlock());
	public static final RegistryObject<Block> ACACIA_CHAIR = REGISTRY.register("acacia_chair", () -> new AcaciaChairBlock());
	public static final RegistryObject<Block> ACACIA_COUNTER = REGISTRY.register("acacia_counter", () -> new AcaciaCounterBlock());
	public static final RegistryObject<Block> CONNECTING_OAK_GLASS = REGISTRY.register("connecting_oak_glass", () -> new ConnectingOakGlassBlock());
	public static final RegistryObject<Block> CONNECTING_OAK_GLASS_PANE = REGISTRY.register("connecting_oak_glass_pane", () -> new ConnectingOakGlassPaneBlock());
}
